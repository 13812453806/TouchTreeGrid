{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "MyController"
    },
    "designerId": "86531a3e-f268-40f4-b550-e18c5ff85973",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onCheckin",
                "designer|params": [
                    "container"
                ],
                "implHandler": [
                    "var returnItem = this.getDateexamples().down('#example1');\r",
                    "var lastSelDt = returnItem.down('#checkin_btn').lastSelectedDate;\r",
                    "\r",
                    "var selDts=(Ext.isEmpty(lastSelDt) ? [] : [lastSelDt]), disableDts=[];\r",
                    "var checkOutDt = returnItem.down('#checkout_btn').lastSelectedDate;\r",
                    "if (!Ext.isEmpty(checkOutDt)) {\r",
                    "    // disabled checkkou date if defined\r",
                    "    selDts.push(checkOutDt);\r",
                    "    disableDts.push(checkOutDt);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "var getDts = Ext.create('widget.calendarpicker', {\r",
                    "    title : 'Choose Check In',\r",
                    "    itemId : 'calendar_checkin',\r",
                    "    customCls : ['calendarpicker-kayak'],\r",
                    "    selectMode: 'SINGLE',\r",
                    "    backMonths: 0,\r",
                    "    forwardMonths: 12,\r",
                    "    autoCollapseMonthsPriorToMinSelDt: true,\r",
                    "    useIconsForExpCollapse: false,\r",
                    "    disablePastDates: true,\r",
                    "    holidayDtArr: ['2013-01-01', '2013-01-21', '2013-02-18', '2013-05-27', '2013-07-04', '2013-09-02', '2013-11-28', '2013-12-25', '2014-01-01', '2014-01-20', '2014-02-17'],\r",
                    "    returnItem: returnItem,\r",
                    "    selDtArr: selDts,\r",
                    "    disableDtArr: disableDts,\r",
                    "    singleExpand: true,\r",
                    "    defaultCollapseLevel: 1,\r",
                    "    \r",
                    "    height: '100%',\r",
                    "    width: '100%'\r",
                    "});\r",
                    "\r",
                    "var overPnl = this.getOverlayPanel();\r",
                    "overPnl.add(getDts);\r",
                    "overPnl.showBy(container);\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "checkin",
                "designer|targetType": "Ext.Container",
                "designer|controlQuery": "container"
            },
            "designerId": "1be63029-1922-4e86-b322-fd055459eca7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onCheckInClosed",
                "designer|params": [
                    "calendarpicker"
                ],
                "implHandler": [
                    "var selDts = calendarpicker.getSelDtArr();\r",
                    "var lastSelDt = calendarpicker.getLastSelectedDate();\r",
                    "if (!Ext.isEmpty(lastSelDt)) {\r",
                    "    var returnItem=calendarpicker.getReturnItem();\r",
                    "    var day = Ext.Date.parse(lastSelDt, 'Y-m-d');\r",
                    "\r",
                    "    var day_html = returnItem.down('#checkin_day');\r",
                    "    day_html.setHtml(Ext.Date.format(day, 'j')); \r",
                    "    day_html.addCls('kayak-button-day');\r",
                    "    day_html.removeCls('kayak-button-select');\r",
                    "\r",
                    "    var other_html = returnItem.down('#checkin_dayname_month');\r",
                    "    other_html.setHtml(Ext.Date.format(day, 'D')+'<br>'+Ext.Date.format(day, 'M')); \r",
                    "\r",
                    "    returnItem.down('#checkin_btn').lastSelectedDate = lastSelDt;\r",
                    "\r",
                    "    // clear checkout date if new checkin date is changed to after it\r",
                    "    var out = returnItem.down('#checkout_btn');\r",
                    "\r",
                    "    if (out) {\r",
                    "        day_html = out.down('#checkout_day');        \r",
                    "        if (out.lastSelectedDate < lastSelDt) {   \r",
                    "            out.lastSelectedDate = '';\r",
                    "            day_html.setHtml('Select');\r",
                    "            day_html.addCls('kayak-button-select');\r",
                    "\r",
                    "            other_html = out.down('#checkout_dayname_month');\r",
                    "            other_html.setHtml(''); \r",
                    "        } else {\r",
                    "            if (!Ext.isEmpty(out.lastSelectedDate)) {\r",
                    "                //       day_html.removeCls('kayak-button-select');\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "}\r",
                    "var overPnl = this.getOverlayPanel();\r",
                    "overPnl.removeAll(true, true);  // remove all items from DOM \r",
                    "overPnl.hide();"
                ],
                "name": "calendarClosed",
                "designer|targetType": "Ext.Container",
                "designer|controlQuery": "container#calendar_checkin"
            },
            "designerId": "cde8bb5e-db7a-4322-a0fb-63db896d4ad6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onCheckout",
                "designer|params": [
                    "container"
                ],
                "implHandler": [
                    "var returnItem = this.getDateexamples().down('#example1');\r",
                    "var lastSelDt = returnItem.down('#checkout_btn').lastSelectedDate;\r",
                    "\r",
                    "var back=0, fwd=12, selDts=(Ext.isEmpty(lastSelDt) ? [] : [lastSelDt]), disableDts=[];\r",
                    "var checkInDt = returnItem.down('#checkin_btn').lastSelectedDate;\r",
                    "if (!Ext.isEmpty(checkInDt)) {\r",
                    "    // disabled all dates on and prior to check in date (for that month)\r",
                    "    // and mark checkin date as selected\r",
                    "    selDts.push(checkInDt);\r",
                    "\r",
                    "    var inActDt = Ext.Date.parse(checkInDt, 'Y-m-d');\r",
                    "    var inFirstDt = Ext.Date.clearTime(Ext.Date.getFirstDateOfMonth(inActDt), true);\r",
                    "\r",
                    "    var today= Ext.Date.clearTime(new Date(Date(Ext.Date.now())), true);\r",
                    "    var currFirstDt = Ext.Date.clearTime(Ext.Date.getFirstDateOfMonth(today), true);\r",
                    "\r",
                    "    var modiff = Ext.Date.diff(currFirstDt, inFirstDt, Ext.Date.MONTH);\r",
                    "    back = -1*modiff;\r",
                    "\r",
                    "    var tmpDt = inActDt, tmpDt2;\r",
                    "    do {\r",
                    "        disableDts.push(Ext.Date.format(tmpDt, 'Y-m-d'));\r",
                    "\r",
                    "        tmpDt2 = Ext.Date.clone(tmpDt);\r",
                    "        tmpDt = Ext.Date.add(tmpDt, Ext.Date.DAY, -1);  // next day\r",
                    "        if (Ext.Date.format(tmpDt2, 'Y-m-d')===Ext.Date.format(tmpDt, 'Y-m-d')) {\r",
                    "            // Correct for day light savings changes were add() method only adds 23 hours\r",
                    "            tmpDt = Ext.Date.add(tmpDt, Ext.Date.DAY, -1);  // next day\r",
                    "        }\r",
                    "        Ext.Date.clearTime(tmpDt);        \r",
                    "\r",
                    "    } while (tmpDt >= inFirstDt);\r",
                    "}\r",
                    "\r",
                    "\r",
                    "\r",
                    "var getDts = Ext.create('widget.calendarpicker', {\r",
                    "    //   xtype: 'calendarpicker',\r",
                    "    title : 'Choose Check Out',\r",
                    "    itemId : 'calendar_checkout',\r",
                    "    customCls : ['calendarpicker-kayak'],\r",
                    "    selectMode: 'SINGLE',\r",
                    "    backMonths: back,\r",
                    "    forwardMonths: fwd,\r",
                    "    useIconsForExpCollapse: false,\r",
                    "    disablePastDates: true,    \r",
                    "    holidayDtArr: ['2013-01-01', '2013-01-21', '2013-02-18', '2013-05-27', '2013-07-04', '2013-09-02', '2013-11-28', '2013-12-25', '2014-01-01', '2014-01-20', '2014-02-17'],\r",
                    "    includeCustomFooterItems: false,\r",
                    "    returnItem: returnItem,\r",
                    "    selDtArr : selDts,\r",
                    "    disableDtArr: disableDts,\r",
                    "    height: '100%',\r",
                    "    width: '100%'\r",
                    "});\r",
                    "\r",
                    "var overPnl = this.getOverlayPanel();\r",
                    "overPnl.add(getDts);\r",
                    "\r",
                    "\r",
                    "overPnl.showBy(container);\r",
                    "\r",
                    ""
                ],
                "name": "checkout",
                "designer|targetType": "Ext.Container",
                "designer|controlQuery": "container"
            },
            "designerId": "9008135b-30fb-470d-a282-f2364a613740"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "overlayPanel",
                "selector": "overlayPanel",
                "xtype": "overlayPanel"
            },
            "designerId": "61097911-17de-46af-afb7-4fb60dbc0782"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onCheckOutClosed",
                "designer|params": [
                    "calendarpicker"
                ],
                "implHandler": [
                    "var selDts = calendarpicker.getSelDtArr();\r",
                    "var lastSelDt = calendarpicker.getLastSelectedDate();\r",
                    "if (!Ext.isEmpty(lastSelDt)) {\r",
                    "    var returnItem=calendarpicker.getReturnItem();\r",
                    "    var day = Ext.Date.parse(lastSelDt, 'Y-m-d');\r",
                    "\r",
                    "    var day_html = returnItem.down('#checkout_day');\r",
                    "    day_html.setHtml(Ext.Date.format(day, 'j')); \r",
                    "    day_html.addCls('kayak-button-day');\r",
                    "    day_html.removeCls('kayak-button-select');    \r",
                    "\r",
                    "    var other_html = returnItem.down('#checkout_dayname_month');\r",
                    "    other_html.setHtml(Ext.Date.format(day, 'D')+'<br>'+Ext.Date.format(day, 'M')); \r",
                    "\r",
                    "    returnItem.down('#checkout_btn').lastSelectedDate = lastSelDt;\r",
                    "}\r",
                    "\r",
                    "var overPnl = this.getOverlayPanel();\r",
                    "overPnl.removeAll(true, true);  // remove all items from DOM \r",
                    "overPnl.hide();"
                ],
                "name": "calendarClosed",
                "designer|targetType": "Ext.Container",
                "designer|controlQuery": "container#calendar_checkout"
            },
            "designerId": "bf832732-d38d-4d68-8cbe-c2fad202242f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onCheckin2",
                "designer|params": [
                    "container"
                ],
                "implHandler": [
                    "var returnItem = this.getDateexamples().down('#example2');\r",
                    "var selDtArr = returnItem.down('#checkin_btn2').selDtArr;\r",
                    "\r",
                    "var selDts=(Ext.isEmpty(selDtArr) ? [] : selDtArr), disableDts=[];\r",
                    "\r",
                    "var getDts = Ext.create('widget.calendarpicker', {\r",
                    "    //     xtype: 'calendarpicker',\r",
                    "    title : 'Check In / Check Out',\r",
                    "    itemId : 'calendar_checkin2',\r",
                    "    customCls : ['calendarpicker-kayak'],\r",
                    "    selectMode: 'RANGE',\r",
                    "    backMonths: 0,\r",
                    "    forwardMonths: 12,\r",
                    "    autoCollapseMonthsPriorToMinSelDt: true,\r",
                    "    useIconsForExpCollapse: true,\r",
                    "    disablePastDates: true,\r",
                    "    holidayDtArr: ['2013-01-01', '2013-01-21', '2013-02-18', '2013-05-27', '2013-07-04', '2013-09-02', '2013-11-28', '2013-12-25', '2014-01-01', '2014-01-20', '2014-02-17'],\r",
                    "    includeCustomFooterItems: true,\r",
                    "    returnItem: returnItem,\r",
                    "    defaultCollapseLevel: 99,\r",
                    "    selDtArr: selDts,\r",
                    "    disableDtArr: disableDts,\r",
                    "    height: '100%',\r",
                    "    width: '100%'\r",
                    "});\r",
                    "\r",
                    "var overPnl = this.getOverlayPanel();\r",
                    "overPnl.add(getDts);\r",
                    "\r",
                    "overPnl.showBy(container);\r",
                    "\r",
                    ""
                ],
                "name": "checkin2",
                "designer|targetType": "Ext.Container",
                "designer|controlQuery": "container"
            },
            "designerId": "c0dd0cb6-1546-4ce0-b8bf-a04fc87bf548"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onCheckin2Closed",
                "designer|params": [
                    "calendarpicker"
                ],
                "implHandler": [
                    "//debugger;\r",
                    "\r",
                    "var returnItem=calendarpicker.getReturnItem();\r",
                    "var day_html = returnItem.down('#checkin_day2');\r",
                    "var other_html = returnItem.down('#checkin_dayname_month2');\r",
                    "var day_html2 = returnItem.down('#checkout_day2');\r",
                    "var other_html2 = returnItem.down('#checkout_dayname_month2');\r",
                    "\r",
                    "var selDts = calendarpicker.getSelDtArr();\r",
                    "returnItem.down('#checkin_btn2').selDtArr = selDts;\r",
                    "\r",
                    "day_html.removeCls('kayak-button-select');  \r",
                    "day_html2.removeCls('kayak-button-select');\r",
                    "\r",
                    "if (Ext.isEmpty(selDts)) {\r",
                    "    day_html.setHtml('Select');\r",
                    "    day_html2.setHtml('Select');\r",
                    "    other_html.setHtml(''); \r",
                    "    other_html2.setHtml(''); \r",
                    "    day_html.addCls('kayak-button-select');  // show select button\r",
                    "    day_html2.addCls('kayak-button-select');\r",
                    "} else {       \r",
                    "    var maxDt = Ext.Array.max(selDts);\r",
                    "    var minDt = Ext.Array.min(selDts);   \r",
                    "\r",
                    "    var minDay = Ext.Date.parse(minDt, 'Y-m-d');\r",
                    "    var maxDay = Ext.Date.parse(maxDt, 'Y-m-d');\r",
                    "\r",
                    "\r",
                    "    day_html.setHtml(Ext.Date.format(minDay, 'j')); \r",
                    "    day_html2.setHtml(Ext.Date.format(maxDay, 'j')); \r",
                    "\r",
                    "    day_html.addCls('kayak-button-day');\r",
                    "    day_html2.addCls('kayak-button-day');\r",
                    "\r",
                    "\r",
                    "    other_html.setHtml(Ext.Date.format(minDay, 'D')+'<br>'+Ext.Date.format(minDay, 'M')); \r",
                    "    other_html2.setHtml(Ext.Date.format(maxDay, 'D')+'<br>'+Ext.Date.format(maxDay, 'M'));     \r",
                    "}    \r",
                    "\r",
                    "var overPnl = this.getOverlayPanel();\r",
                    "overPnl.removeAll(true, true);  // remove all items from DOM \r",
                    "overPnl.hide();"
                ],
                "name": "calendarClosed",
                "designer|targetType": "Ext.Container",
                "designer|controlQuery": "container#calendar_checkin2"
            },
            "designerId": "8f630be5-4829-4fb6-90b3-ac975e9509ba"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "dateexamples",
                "selector": "dateexamples",
                "xtype": "dateexamples"
            },
            "designerId": "d7978cb8-6f21-443f-b991-5dbb35b78798"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onMultisel_btn",
                "designer|params": [
                    "container"
                ],
                "implHandler": [
                    "var returnItem = this.getDateexamples().down('#example3');\r",
                    "var selDtArr = returnItem.down('#multisel_btn').selDtArr;\r",
                    "var initDtArr = ['2013-09-11', '2013-09-17', '2013-11-06'];\r",
                    "\r",
                    "var selDts=(Ext.isEmpty(selDtArr) ? initDtArr : selDtArr), disableDts=[];\r",
                    "\r",
                    "var getDts = Ext.create('widget.calendarpicker', {\r",
                    "    //     xtype: 'calendarpicker',\r",
                    "    title : 'Select Multiple Dates',\r",
                    "    itemId : 'calendar_multi',\r",
                    "    customCls : ['calendarpicker-kayak'],\r",
                    "    selectMode: 'MULTI',\r",
                    "    backMonths: 3,\r",
                    "    forwardMonths: 6,\r",
                    "    autoCollapseMonthsPriorToMinSelDt: true,\r",
                    "    useIconsForExpCollapse: true,\r",
                    "    disablePastDates: false,\r",
                    "    disableWeekends: true,\r",
                    "    disableHolidays: true,\r",
                    "    holidayDtArr: ['2013-01-01', '2013-01-21', '2013-02-18', '2013-05-27', '2013-07-04', '2013-09-02', '2013-11-28', '2013-12-25', '2014-01-01', '2014-01-20', '2014-02-17'],\r",
                    "    includeCustomFooterItems: true,\r",
                    "    returnItem: returnItem,\r",
                    "    defaultCollapseLevel: 1,\r",
                    "    selDtArr: selDts,\r",
                    "    disableDtArr: disableDts,\r",
                    "    height: '100%',\r",
                    "    width: '100%'\r",
                    "});\r",
                    "\r",
                    "var overPnl = this.getOverlayPanel();\r",
                    "overPnl.add(getDts);\r",
                    "\r",
                    "overPnl.showBy(container);\r",
                    ""
                ],
                "name": "multisel_btn",
                "designer|targetType": "Ext.Container",
                "designer|controlQuery": "container"
            },
            "designerId": "0dda2bc8-b49c-4f20-9650-a262aab85a65"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onMultiselClosed",
                "designer|params": [
                    "calendarpicker"
                ],
                "implHandler": [
                    "//debugger;\r",
                    "\r",
                    "var returnItem=calendarpicker.getReturnItem();\r",
                    "var multi_html = returnItem.down('#multisel_dates_html');\r",
                    "\r",
                    "var selDts = calendarpicker.getSelDtArr();\r",
                    "returnItem.down('#multisel_btn').selDtArr = selDts;\r",
                    "\r",
                    "// sort array, build string and update html\r",
                    "selDts.sort();\r",
                    "multi_html.setHtml(selDts.join(', '));\r",
                    "\r",
                    "var overPnl = this.getOverlayPanel();\r",
                    "overPnl.removeAll(true, true);  // remove all items from DOM \r",
                    "overPnl.hide();"
                ],
                "name": "calendarClosed",
                "designer|targetType": "Ext.Container",
                "designer|controlQuery": "container#calendar_multi"
            },
            "designerId": "873cee76-f88d-45db-95e6-4d7f04652663"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onLookup_btn",
                "designer|params": [
                    "container"
                ],
                "implHandler": [
                    "var dateEx = this.getDateexamples();\r",
                    "var returnItem = dateEx.down('#example4');\r",
                    "var newcont = dateEx.down('#datePlanner');\r",
                    "\r",
                    "// Save title bar state and rename \r",
                    "var appTitle = dateEx.down('#appTitle');\r",
                    "appTitle.origTitle = appTitle.getTitle()._title;\r",
                    "appTitle.origUi = appTitle.getUi();\r",
                    "appTitle.origCls = appTitle.getCls();\r",
                    "\r",
                    "appTitle.setTitle('Custom Calendar');\r",
                    "appTitle.setUi('light');\r",
                    "appTitle.setCls('');\r",
                    "\r",
                    "var planner_cal = newcont.down('#planner_cal');\r",
                    "\r",
                    "\r",
                    "var holidayDtArr = ['2013-01-01', '2013-01-21', '2013-02-18', '2013-05-27', '2013-07-04', '2013-09-02', '2013-11-28', '2013-12-25', '2014-01-01', '2014-01-20', '2014-02-17'];\r",
                    "\r",
                    "myCustomBtns = {\r",
                    "    xtype: 'segmentedbutton',\r",
                    "    itemId : 'pickerfooterbtns',\r",
                    "    docked : 'right',\r",
                    "    items: [\r",
                    "    {\r",
                    "        xtype: 'button',\r",
                    "        text: 'RETURN',\r",
                    "        iconCls: '',\r",
                    "        cls: 'pickerfooterbtns',\r",
                    "        listeners : {\r",
                    "            tap: function (button, e, options) {\r",
                    "                this.up('calendarpicker').customBtns('CANCEL');\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "]};\r",
                    "\r",
                    "var getDts = Ext.create('widget.calendarpicker', {\r",
                    "    //     xtype: 'calendarpicker',\r",
                    "    hideTitleBar: true,\r",
                    "    itemId : 'calendar_lookup',\r",
                    "    selectMode: 'NONE',\r",
                    "    backMonths: 3,\r",
                    "    forwardMonths: 12,\r",
                    "    useIconsForExpCollapse: false,\r",
                    "    holidayDtArr: holidayDtArr,\r",
                    "    includeCustomFooterItems: true,\r",
                    "    returnItem: returnItem,\r",
                    "    defaultCollapseLevel: 99,\r",
                    "    enableQuickDaySelection: true,\r",
                    "    height: '100%',\r",
                    "    width: '100%',\r",
                    "    customFooterItems: myCustomBtns,\r",
                    "    footerDock: 'top'\r",
                    "});\r",
                    "\r",
                    "\r",
                    "planner_cal.add(getDts);\r",
                    "\r",
                    "dateEx.setActiveItem(newcont);\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "lookup_btn",
                "designer|targetType": "Ext.Container",
                "designer|controlQuery": "container"
            },
            "designerId": "ff22022b-4119-477a-bb17-692003e96480"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onContainerDateSelected",
                "designer|params": [
                    "calendarpicker",
                    "dateStr",
                    "date"
                ],
                "implHandler": [
                    "\r",
                    "var dateEx = this.getDateexamples();\r",
                    "var returnItem = dateEx.down('#example4');\r",
                    "var plannerDetailText = dateEx.down('#plannerDetailText');\r",
                    "\r",
                    "if (!Ext.isEmpty(plannerDetailText)) {\r",
                    "    plannerDetailText.setHtml(dateStr);\r",
                    "}\r",
                    ""
                ],
                "name": "dateSelected",
                "designer|targetType": "Ext.Container",
                "designer|controlQuery": "container#calendar_lookup"
            },
            "designerId": "79953e95-73e8-43ea-bcca-a8dbebfb54df"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onLookupClosed",
                "designer|params": [
                    "calendarpicker"
                ],
                "implHandler": [
                    "var dateEx = this.getDateexamples();\r",
                    "\r",
                    "var returnItem=calendarpicker.getReturnItem();\r",
                    "\r",
                    "// Restore title bar state\r",
                    "var appTitle = dateEx.down('#appTitle');\r",
                    "appTitle.setTitle(appTitle.origTitle);\r",
                    "appTitle.setUi(appTitle.origUi);\r",
                    "appTitle.setCls(appTitle.origCls);\r",
                    "\r",
                    "var planner_cal = dateEx.down('#planner_cal');\r",
                    "var newcont = dateEx.down('#firstSet');\r",
                    "dateEx.setActiveItem(newcont);\r",
                    "planner_cal.removeAll(true, true);\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "calendarClosed",
                "designer|targetType": "Ext.Container",
                "designer|controlQuery": "container#calendar_lookup"
            },
            "designerId": "b4ee051c-1c47-488a-a30d-515afaed1bd6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onFilter_btn",
                "designer|params": [
                    "container"
                ],
                "implHandler": [
                    "var returnItem = this.getDateexamples().down('#example4');\r",
                    "\r",
                    "var myCategImg = '<img src=\"./resources/images/ribbon.png\" class=\"christmas-categ-img\">';\r",
                    "\r",
                    "var myCustomBtns = [ \r",
                    "{\r",
                    "    xtype: 'img',\r",
                    "    src: './resources/images/holly.png',\r",
                    "    cls: 'christmas-img'\r",
                    "},     \r",
                    "{\r",
                    "    xtype: 'label',\r",
                    "    html: 'Christmas Calendars',\r",
                    "    cls: 'christmas-label'\r",
                    "}, \r",
                    "{    \r",
                    "    xtype: 'segmentedbutton',\r",
                    "    itemId : 'pickerfooterbtns',\r",
                    "    docked : 'right',\r",
                    "    items: [\r",
                    "    {\r",
                    "        xtype: 'button',\r",
                    "        text: 'RETURN',\r",
                    "        iconCls: '',\r",
                    "        cls: 'pickerfooterbtns',\r",
                    "        listeners : {\r",
                    "            tap: function (button, e, options) {\r",
                    "                this.up('calendarpicker').customBtns('CANCEL');\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "]}\r",
                    "];\r",
                    "\r",
                    "\r",
                    "var myRend = {renderer_month: function (values)\r",
                    "    {return myCategImg+values.month + ' ' + values.year+myCategImg;},\r",
                    "    renderer_dates: function (fldName, values) {\r",
                    "        var elem=values[fldName];\r",
                    "        hol = values['isHoliday_'+fldName];\r",
                    "        if (hol) {\r",
                    "            elem = '<img src=\"./resources/images/christmas_tree.png\" >';\r",
                    "        }\r",
                    "    return elem;},             \r",
                    "    cls_renderer_dates: function (fldName, values)\r",
                    "    {var cls=\"\", dt, sel, hol, dis, par = this.scope.parent;\r",
                    "        dt = values['dt_'+fldName];\r",
                    "        hol = values['isHoliday_'+fldName];\r",
                    "        dis = values['isDisabled_'+fldName];\r",
                    "\r",
                    "        if (values.rowType === 'H') {}  // do nothing for header rows\r",
                    "        else if (Ext.isEmpty(dt)) {} // do nothing for empty dates\r",
                    "\r",
                    "        else if (hol) {\r",
                    "        return 'calendar-tree'; }     \r",
                    "        else {\r",
                    "            sel = (par.getSelDtArr().indexOf(Ext.Date.format(dt, 'Y-m-d'))>-1);            \r",
                    "            if (Ext.Date.format(dt, 'w')==='0' || Ext.Date.format(dt, 'w')==='6') {\r",
                    "                cls = cls+' calendarpicker-weekend';\r",
                    "            }   \r",
                    "            if (hol){cls = cls+' calendarpicker-holiday';}\r",
                    "            if (!Ext.isEmpty(this.scope.todayDt)){\r",
                    "                if (this.scope.todayDt === Ext.Date.format(dt, 'Y-m-d')) {\r",
                    "                    cls = cls+' calendarpicker-today';\r",
                    "                }\r",
                    "            }     \r",
                    "            if (dis){cls = cls+' calendarpicker-disabled';}\r",
                    "            if (sel){cls = cls+' calendarpicker-selected';}\r",
                    "        }\r",
                    "\r",
                    "        return (\"calendarpicker-days\" + cls);\r",
                    "    }};\r",
                    "\r",
                    "    var myFilt = {\r",
                    "        enabled: true,\r",
                    "        displayNodesWithAllMembersFilteredAsLeafs: true,\r",
                    "        filterFn: function(rowObj) {return (rowObj.month === 'December');}\r",
                    "    };\r",
                    "\r",
                    "    var getDts = Ext.create('widget.calendarpicker', {\r",
                    "        //     xtype: 'calendarpicker',\r",
                    "        title : 'Christmas Calendars',\r",
                    "        itemId : 'calendar_filter',\r",
                    "        customCls : ['calendarpicker-christmas'],\r",
                    "        selectMode: 'NONE',\r",
                    "        backMonths: 0,\r",
                    "        forwardMonths: 144,\r",
                    "        useIconsForExpCollapse: false,\r",
                    "        holidayDtArr: ['2013-12-25', '2014-12-25', '2015-12-25', '2016-12-26', '2017-12-25', '2018-12-25', '2019-12-25', '2020-12-25', '2021-12-24', '2022-12-26', '2023-12-25', '2024-12-25', '2025-12-25', '2026-12-25', '2027-12-25'],\r",
                    "        includeCustomFooterItems: true,\r",
                    "        returnItem: returnItem,\r",
                    "        defaultCollapseLevel: 99,\r",
                    "        height: '100%',\r",
                    "        width: '100%',\r",
                    "        customFooterItems: myCustomBtns,\r",
                    "        footerDock: 'top',\r",
                    "        hideExpandCollapseBtns: true,\r",
                    "        disableExpandCollapse: true,\r",
                    "        hideTitleBar: true,\r",
                    "        filter: myFilt,\r",
                    "        renderers: myRend\r",
                    "\r",
                    "    });\r",
                    "\r",
                    "    var overPnl = this.getOverlayPanel();\r",
                    "    overPnl.add(getDts);\r",
                    "\r",
                    "    overPnl.showBy(container);"
                ],
                "name": "filter_btn",
                "designer|targetType": "Ext.Container",
                "designer|controlQuery": "container"
            },
            "designerId": "46f04858-097a-41fc-88c1-933279f28e0e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onFilterClosed",
                "designer|params": [
                    "calendarpicker"
                ],
                "implHandler": [
                    "\r",
                    "var returnItem=calendarpicker.getReturnItem();\r",
                    "\r",
                    "var overPnl = this.getOverlayPanel();\r",
                    "overPnl.removeAll(true, true);  // remove all items from DOM \r",
                    "overPnl.hide();"
                ],
                "name": "calendarClosed",
                "designer|targetType": "Ext.Container",
                "designer|controlQuery": "container#calendar_filter"
            },
            "designerId": "5c4eb335-fb69-489f-a9bf-2dc62abf444f"
        }
    ]
}