{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "CommonController"
    },
    "designerId": "97a4c3a2-9a08-4611-87a1-12b030c85f82",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "launch",
                "implHandler": [
                    "this.loadCensusFreezeStore();\r",
                    ""
                ]
            },
            "designerId": "26f5668a-8593-45d7-92a3-21100003b54b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadCensusFreezeStore",
                "implHandler": [
                    "var me = this;\r",
                    "\r",
                    "var gridcont = me.getCensusFreezeCont().down('#censusfreeze');\r",
                    "var gridurl = './data/censusmaine2000TREE.json';\r",
                    "\r",
                    "this.loadStore(me, gridcont, gridurl, 'Loading Census...');\r",
                    ""
                ]
            },
            "designerId": "7485524c-acbf-47bc-8a71-1ab0c060e831"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadStore",
                "designer|params": [
                    "me",
                    "gridcont",
                    "gridurl",
                    "loadmask",
                    "loadStoreInPostProcess"
                ],
                "implHandler": [
                    "// Load TreeStore data from JSON file within Controller since doesn't seem to work from within Store itself.\r",
                    "// NOTE:  autoload=true -and- dummy root initialization required in Store to work=>\r",
                    "//     root: {children: []}\r",
                    "// Also:  Regular stores in JSON file format seem to load from within Store without issue.\r",
                    "\r",
                    "if (loadmask) {\r",
                    "    Ext.Viewport.setMasked({\r",
                    "        xtype: 'loadmask',\r",
                    "        message: loadmask\r",
                    "    });\r",
                    "}\r",
                    "\r",
                    "var myRequest = Ext.Ajax.request({\r",
                    "    url: gridurl,\r",
                    "    method: 'GET',\r",
                    "    timeout: 10000,\r",
                    "    cache: false,\r",
                    "    dataType: 'json',\r",
                    "    reader:{\r",
                    "        type: 'json'\r",
                    "    },\r",
                    "\r",
                    "    success: function(response) {\r",
                    "        var griddata = Ext.JSON.decode(response.responseText);\r",
                    "\r",
                    "        var gridListItemId = gridcont.getListItemId();\r",
                    "        var gridlist = gridcont.down('#'+gridListItemId);\r",
                    "        var gridstore = gridlist.getStore();\r",
                    "\r",
                    "        if (!loadStoreInPostProcess) {\r",
                    "            gridstore.suspendEvents();      \r",
                    "            gridstore.removeAll();\r",
                    "            var gridloaded = gridstore.setData(griddata);  \r",
                    "            // setRoot() not working for TreeStores => http://www.sencha.com/forum/showthread.php?242257\r",
                    "            gridstore.resumeEvents();\r",
                    "            if (loadmask) {Ext.Viewport.setMasked(false);}\r",
                    "        }            \r",
                    "\r",
                    "        me.postLoadProcess(gridListItemId, gridcont, griddata); \r",
                    "\r",
                    "    },\r",
                    "\r",
                    "    failure: function(response, opts) {\r",
                    "        if (loadmask) {Ext.Viewport.setMasked(false);}\r",
                    "\r",
                    "        Ext.Msg.alert('Data not loaded: '+gridurl);     \r",
                    "    }\r",
                    "});\r",
                    ""
                ]
            },
            "designerId": "f5cbfe6b-64c0-4abe-bec5-092851762cab"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "postLoadProcess",
                "designer|params": [
                    "gridListItemId",
                    "gridcont",
                    "griddata"
                ],
                "implHandler": [
                    "var refreshed, fldListArr = [], collapseLvl, gridlist, scroller, myFilt = {}, gridcontX;\r",
                    "var isPhone = !Ext.isEmpty(Ext.os.is.Phone);  // needed since this function returns either undefined or true\r",
                    "\r",
                    "\r",
                    "gridlist = gridcont.down('#'+gridListItemId);\r",
                    "scroller = gridlist.getScrollable().getScroller();\r",
                    "\r",
                    "\r",
                    "if (gridListItemId === 'censusfreezelist') {\r",
                    "    // Collapse nodes to defined level\r",
                    "    var depth = gridcont.getDefaultCollapseLevel();\r",
                    "    if (depth !== 99) {gridcont.doExpandDepth(depth);}\r",
                    "\r",
                    "    this.loadColumnsCensusFreeze(gridcont, false); // also refreshes list\r",
                    "\r",
                    "    gridcontX = this.getCensusFreezeCont().down('#censusfreezeX');\r",
                    "    gridcontX.doRefreshList(true);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "\r",
                    "else {\r",
                    "    refreshed = gridcont.doRefreshList(); \r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "5a9e891b-3e64-4606-b465-53a28cbc5e6f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadColumnsCensusFreeze",
                "designer|params": [
                    "gridcont",
                    "noRefresh"
                ],
                "implHandler": [
                    "var colArr = [\r",
                    "{\r",
                    "    header: \"Total\", \r",
                    "    dataIndex: \"TotalPopulation\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.TotalPopulation, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"Male\", \r",
                    "    dataIndex: \"Male\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Male, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"Female\", \r",
                    "    dataIndex: \"Female\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Female, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"<5yrs\", \r",
                    "    dataIndex: \"Under5years\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Under5years, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"5-9\", \r",
                    "    dataIndex: \"Age5to9\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age5to9, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"10-14\", \r",
                    "    dataIndex: \"Age10to14\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age10to14, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"15-19\", \r",
                    "    dataIndex: \"Age15to19\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age15to19, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"20-24\", \r",
                    "    dataIndex: \"Age20to24\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age20to24, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"25-34\", \r",
                    "    dataIndex: \"Age25to34\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age25to34, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"35-44\", \r",
                    "    dataIndex: \"Age35to44\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age35to44, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"45-54\", \r",
                    "    dataIndex: \"Age45to54\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age45to54, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"55-59\", \r",
                    "    dataIndex: \"Age55to59\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age55to59, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"60-64\", \r",
                    "    dataIndex: \"Age60to64\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age60to64, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"65-74\", \r",
                    "    dataIndex: \"Age65to74\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age65to74, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"75-84\", \r",
                    "    dataIndex: \"Age75to84\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age75to84, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"85+\", \r",
                    "    dataIndex: \"Age85andOver\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age85andOver, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"Median\", \r",
                    "    dataIndex: \"MedianAge\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.MedianAge, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"18+\", \r",
                    "    dataIndex: \"Age18andOver\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age18andOver, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"18+ Male\", \r",
                    "    dataIndex: \"Age18andOverMale\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age18andOverMale, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"18+ Fem\", \r",
                    "    dataIndex: \"Age18andOverFemale\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age18andOverFemale, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"21+\", \r",
                    "    dataIndex: \"Age21andOver\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age21andOver, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"62+\", \r",
                    "    dataIndex: \"Age62andOver\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age62andOver, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"65+\", \r",
                    "    dataIndex: \"Age65andOver\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age65andOver, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"65+ Male\", \r",
                    "    dataIndex: \"Age65andOverMale\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age65andOverMale, 0)\", \r",
                    "    style: \"text-align:  right;\" \r",
                    "}, \r",
                    "{\r",
                    "    header: \"65+ Fem\", \r",
                    "    dataIndex: \"Age65andOverFemale\", \r",
                    "    width: \"100px\", \r",
                    "    renderer: \"this.formatNumbers(values.Age65andOverFemale, 0)\", \r",
                    "    style: \"text-align:  center;\" \r",
                    "}\r",
                    "];\r",
                    "\r",
                    "gridcont.setColumns(colArr);\r",
                    "if (!noRefresh) {\r",
                    "    gridcont.doRefreshList(true);   // Don't change collapse levels when refreshing\r",
                    "}    \r",
                    ""
                ]
            },
            "designerId": "3e5d7ad1-3a1a-4881-873c-5ce4f1e309e7"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoCreate": true,
                "ref": "censusFreezeCont",
                "selector": "censusFreezeCont",
                "xtype": "censusFreezeCont"
            },
            "designerId": "3b0ed2ac-8da6-400a-b8ce-9e99c68a6328"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainTabPanel",
                "selector": "mainTabPanel",
                "xtype": "mainTabPanel"
            },
            "designerId": "ab6e03de-ffad-4c9b-aaab-7381bc49a148"
        }
    ]
}