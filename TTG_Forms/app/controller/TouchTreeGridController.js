/*
 * File: app/controller/TouchTreeGridController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TouchTreeGrid.controller.TouchTreeGridController', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            myFormPanel2: {
                autoCreate: true,
                selector: 'myFormPanel2',
                xtype: 'myFormPanel2'
            },
            formEdit: 'container#formEdit'
        },

        control: {
            "button#myForm2EditBtn": {
                tap: 'onMyForm2EditBtnTap'
            },
            "button#myForm2BackBtn": {
                tap: 'onMyForm2BackBtnTap'
            },
            "button#myForm2RevertBtn": {
                tap: 'onMyForm2RevertBtnTap'
            }
        }
    },

    onMyForm2EditBtnTap: function(button, e, eOpts) {
        // Also see TTG_Slider_2.4 project for alternative approach.
        // TouchTreeGrid.view.FormsEdit and TouchTreeGrid.view.MyFormPanel2 which createes listenerss
        // within MyFormPanel2 class to handle Edit, Back and Revert functionality

        var me=this;
        var myFormPanel = button.up("#myFormPanel2");  // UPDATE FOR YOUR PANEL HERE
        var myRec, myFormPanel2Edit, formEdit, fldName;

        if (myFormPanel && button.getItemId() === 'myForm2EditBtn') {
            myRec = myFormPanel.record;

            if (myRec){
                formEdit = me.getFormEdit();

                myFormPanel2Edit = formEdit.down('#myFormPanel2Edit');
                myFormPanel2Edit.setRecord(myRec);
                myFormPanel2Edit.record = myRec;

                if (myRec.get('myRadioBtn_opt1')){
                    formEdit.down('#opt1').setChecked(true);
                }
                else if (myRec.get('myRadioBtn_opt2')){
                    formEdit.down('#opt2').setChecked(true);
                }
                // Otherwise radio button defaulted based on component definition

                myFormPanel2Edit.down('#myForm2EditBtn').setHidden(true);
                myFormPanel2Edit.down('#myForm2Toolbar').setHidden(false);

                formEdit.setActiveItem(myFormPanel2Edit);
            }
        }


    },

    onMyForm2BackBtnTap: function(button, e, eOpts) {
        var me=this;
        var formEdit = me.getFormEdit();
        var myFormPanel2Edit = button.up('#myFormPanel2Edit');
        var values = myFormPanel2Edit.getValues();

        myFormPanel2Edit.record.set(values);
        myFormPanel2Edit.record.set('myRadioBtn_opt1', myFormPanel2Edit.down('#opt1').getChecked());
        myFormPanel2Edit.record.set('myRadioBtn_opt2', myFormPanel2Edit.down('#opt2').getChecked());
        formEdit.setActiveItem(0);

    },

    onMyForm2RevertBtnTap: function(button, e, eOpts) {
        var me=this;
        var formEdit = me.getFormEdit();
        var myFormPanel2Edit = button.up('#myFormPanel2Edit');
        myFormPanel2Edit.reset();
    }

});