/*
 * File: app/view/ListsContainer.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TouchTreeGrid.view.ListsContainer', {
    extend: 'Ext.Container',
    alias: 'widget.listscontainer',

    requires: [
        'TouchTreeGrid.view.TouchTreeGrid'
    ],

    config: {
        ui: 'light',
        layout: {
            type: 'fit'
        },
        items: [
            {
                xtype: 'tabpanel',
                itemId: 'liststabpanel',
                ui: 'light',
                items: [
                    {
                        xtype: 'container',
                        title: 'Basic',
                        itemId: 'dow2012Cont',
                        layout: {
                            type: 'card'
                        },
                        items: [
                            {
                                xtype: 'touchtreegrid',
                                store: 'dow2012store',
                                columns: [
                                    {
                                        header: 'CloseDate',
                                        dataIndex: 'CloseDate',
                                        width: '25%',
                                        style: 'text-align: left; font-weight: bold; color: #008abc;',
                                        headerStyle: 'text-align: left; color: #ccc;',
                                        renderer: 'Ext.Date.format(values.CloseDate, "n/j/Y")',
                                        sortable: true
                                    },
                                    {
                                        header: 'Close',
                                        dataIndex: 'Close',
                                        width: '20%',
                                        style: 'text-align: right;font-weight: bold;',
                                        headerStyle: 'text-align: right; padding-right: .5em !important; color: #ccc;',
                                        renderer: 'this.formatNumbers(values.Close, 0)',
                                        sortable: true
                                    },
                                    {
                                        header: 'Chg',
                                        dataIndex: 'Chg',
                                        width: '20%',
                                        style: 'text-align: right;font-weight: bold;',
                                        headerStyle: 'text-align: right; padding-right: .5em !important; color: #ccc;',
                                        renderer: 'this.renderer_formatWithColor(values.Chg, 0)',
                                        sortable: true
                                    },
                                    {
                                        header: 'Chg%',
                                        dataIndex: 'ChgPct',
                                        width: '20%',
                                        style: 'text-align: right;font-weight: bold;',
                                        headerStyle: 'text-align: right; padding-right: .5em !important; color: #ccc;',
                                        renderer: 'this.renderer_formatWithColor(values.ChgPct, 2, "", "%")',
                                        sortable: true
                                    }
                                ],
                                header: {
                                    xtype: 'toolbar',
                                    docked: 'top',
                                    cls: 'touchtreegrid-header',
                                    maxHeight: '2.6em',
                                    minHeight: '2.6em',
                                    padding: '.6em 0 0 0 !important'
                                },
                                listItemId: 'dow2012list',
                                listPlugins: {
                                    xclass: 'Ext.plugin.PullRefresh'
                                },
                                renderers: {
                                    renderer_formatWithColor: function (value, decPlaces, prefix, suffix, thouSeparator, decSeparator)
                                {var clr = (value >= 0) ? 'green' : 'red';
                                return '<span style="color:' + clr + ';">' + this.formatNumbers(value, decPlaces, prefix, suffix, thouSeparator, decSeparator) +
                                    '</span>';}
                                },
                                helpHtml: './resources/html/DOW2012Example.html',
                                simpleList: true,
                                columnSorting: true,
                                cls: [
                                    'x-touchtreegrid-list',
                                    'x-touchtreegrid-list-dow2012'
                                ],
                                itemId: 'dow2012'
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        title: 'Grouper',
                        itemId: 'dow2012grouperCont',
                        layout: {
                            type: 'card'
                        },
                        items: [
                            {
                                xtype: 'touchtreegrid',
                                store: 'Dow2012grouper',
                                columns: [
                                    {
                                        header: 'CloseDate',
                                        dataIndex: 'CloseDate',
                                        width: '25%',
                                        style: 'text-align: left; font-weight: bold; color: #008abc;',
                                        headerStyle: 'text-align: left; color: #ccc;',
                                        renderer: 'Ext.Date.format(values.CloseDate, "n/j/Y")',
                                        sortable: true
                                    },
                                    {
                                        header: 'Close',
                                        dataIndex: 'Close',
                                        width: '20%',
                                        style: 'text-align: right;font-weight: bold;',
                                        headerStyle: 'text-align: right; padding-right: .5em !important; color: #ccc;',
                                        renderer: 'this.formatNumbers(values.Close, 0)',
                                        sortable: true
                                    },
                                    {
                                        header: 'Chg',
                                        dataIndex: 'Chg',
                                        width: '20%',
                                        style: 'text-align: right;font-weight: bold;',
                                        headerStyle: 'text-align: right; padding-right: .5em !important; color: #ccc;',
                                        renderer: 'this.renderer_formatWithColor(values.Chg, 0)',
                                        sortable: true
                                    },
                                    {
                                        header: 'Chg%',
                                        dataIndex: 'ChgPct',
                                        width: '20%',
                                        style: 'text-align: right;font-weight: bold;',
                                        headerStyle: 'text-align: right; padding-right: .5em !important; color: #ccc;',
                                        renderer: 'this.renderer_formatWithColor(values.ChgPct, 2, "", "%")',
                                        sortable: true
                                    }
                                ],
                                header: {
                                    xtype: 'toolbar',
                                    docked: 'top',
                                    cls: 'touchtreegrid-header',
                                    maxHeight: '2.6em',
                                    minHeight: '2.6em',
                                    padding: '.6em 0 0 0 !important'
                                },
                                listItemId: 'dow2012grouperlist',
                                renderers: {
                                    renderer_formatWithColor: function (value, decPlaces, prefix, suffix, thouSeparator, decSeparator)
                                {var clr = (value >= 0) ? 'green' : 'red';
                                return '<span style="color:' + clr + ';">' + this.formatNumbers(value, decPlaces, prefix, suffix, thouSeparator, decSeparator) +
                                    '</span>';}
                                },
                                helpHtml: './resources/html/DOW2012grouperExample.html',
                                simpleList: true,
                                columnSorting: true,
                                additionalListConfigs: {
                                    grouped: true
                                },
                                cls: [
                                    'x-touchtreegrid-list',
                                    'x-touchtreegrid-list-dow2012-grouper'
                                ],
                                itemId: 'dow2012grouper'
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        title: 'Horiz',
                        itemId: 'dow2012HorizCont',
                        layout: {
                            type: 'hbox'
                        },
                        scrollable: {
                            direction: 'horizontal',
                            directionLock: true
                        },
                        items: [
                            {
                                xtype: 'touchtreegrid',
                                store: 'Dow2012Horiz',
                                columns: [
                                    {
                                        header: 'CloseDate',
                                        dataIndex: 'CloseDate',
                                        width: '6em',
                                        style: 'text-align: left; font-weight: bold; color: #008abc; border-right: 1px solid #9b9b9b',
                                        headerStyle: 'text-align: left; color: #ccc;',
                                        renderer: 'Ext.Date.format(values.CloseDate, "n/j/Y")',
                                        sortable: true
                                    },
                                    {
                                        header: 'Open',
                                        dataIndex: 'Open',
                                        width: '4.375em',
                                        style: 'text-align: right;font-weight: normal;',
                                        headerStyle: 'text-align: right; padding-right: .5em !important; color: #ccc;',
                                        renderer: 'this.formatNumbers(values.Open, 0)',
                                        sortable: true
                                    },
                                    {
                                        header: 'High',
                                        dataIndex: 'High',
                                        width: '4.375em',
                                        style: 'text-align: right;font-weight: normal;',
                                        headerStyle: 'text-align: right; padding-right: .5em !important; color: #ccc;',
                                        renderer: 'this.formatNumbers(values.High, 0)',
                                        sortable: true
                                    },
                                    {
                                        header: 'Low',
                                        dataIndex: 'Low',
                                        width: '4.375em',
                                        style: 'text-align: right;font-weight: normal;',
                                        headerStyle: 'text-align: right; padding-right: .5em !important; color: #ccc;',
                                        renderer: 'this.formatNumbers(values.Low, 0)',
                                        sortable: true
                                    },
                                    {
                                        header: 'Close',
                                        dataIndex: 'Close',
                                        width: '4.375em',
                                        style: 'text-align: right;font-weight: bold;',
                                        headerStyle: 'text-align: right; padding-right: .5em !important; color: #ccc;',
                                        renderer: 'this.formatNumbers(values.Close, 0)',
                                        sortable: true
                                    },
                                    {
                                        header: 'Volume',
                                        dataIndex: 'Volume',
                                        width: '5.625em',
                                        style: 'text-align: right;font-weight: normal; padding-right: 5px; border-right: 1px solid #9b9b9b',
                                        headerStyle: 'text-align: right; padding-right: .5em !important; color: #ccc; ',
                                        renderer: 'this.formatNumbers(values.Volume, 0)',
                                        sortable: true
                                    },
                                    {
                                        header: 'Chg',
                                        dataIndex: 'Chg',
                                        width: '3.125em',
                                        style: 'text-align: right;font-weight: normal;',
                                        headerStyle: 'text-align: right; padding-right: .5em !important; color: #ccc;',
                                        renderer: 'this.renderer_formatWithColor(values.Chg, 0)',
                                        sortable: true
                                    },
                                    {
                                        header: 'Chg%',
                                        dataIndex: 'ChgPct',
                                        width: '4.375em',
                                        style: 'text-align: right;font-weight: normal;',
                                        headerStyle: 'text-align: right; padding-right: .5em !important; color: #ccc;',
                                        renderer: 'this.renderer_formatWithColor(values.ChgPct, 2, "", "%")',
                                        sortable: true
                                    }
                                ],
                                header: {
                                    xtype: 'toolbar',
                                    docked: 'top',
                                    cls: 'touchtreegrid-header',
                                    maxHeight: '2.6em',
                                    minHeight: '2.6em',
                                    padding: '.6em 0 0 0 !important'
                                },
                                listItemId: 'dow2012horizlist',
                                renderers: {
                                    renderer_formatWithColor: function (value, decPlaces, prefix, suffix, thouSeparator, decSeparator)
                                {var clr = (value >= 0) ? 'green' : 'red';
                                return '<span style="color:' + clr + ';">' + this.formatNumbers(value, decPlaces, prefix, suffix, thouSeparator, decSeparator) +
                                    '</span>';}
                                },
                                helpHtml: './resources/html/DOW2012HorizExample.html',
                                simpleList: true,
                                columnSorting: true,
                                cls: [
                                    'x-touchtreegrid-list',
                                    'x-touchtreegrid-list-dow2012Horiz'
                                ],
                                height: 1000,
                                itemId: 'dow2012horiz',
                                minWidth: '36em',
                                width: '36em'
                            }
                        ]
                    }
                ],
                tabBar: {
                    cls: 'projectTabBar',
                    docked: 'top',
                    style: 'background-image: -webkit-linear-gradient(top, rgb(86, 167, 223), rgb(43, 145, 215) 3%, rgb(33, 117, 175));',
                    ui: 'light'
                }
            }
        ]
    },

    initialize: function() {
        this.callParent();

        var horizcont = this.down('#dow2012HorizCont');
        var horizgrid = this.down('#dow2012horizlist');
        var horizexample = this.down('#dow2012horiz');

        // get screen width in pixels
        var scrnwid = (window.innerWidth > 0) ? window.innerWidth : screen.width;  
        // get maximum of screen width or dow2012horiz grid width converted to pixels
        var prewid = 36 * 16;  // 36em total width * 16 pixels per em
        var minScrnWid = Math.max(prewid, scrnwid);  

        horizgrid.setWidth(minScrnWid); 
        horizgrid.setMinWidth(minScrnWid); 
        horizexample.setWidth(minScrnWid); 
        horizexample.setMinWidth(minScrnWid); 

        if (scrnwid > prewid) {
            horizcont.setScrollable({disabled: true});  // disable scrolling if screen larger than grid
        }

    }

});