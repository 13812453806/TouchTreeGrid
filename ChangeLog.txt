**************************************************************************************************
1/22/2015 COMMIT CHANGE LOG: 

Enhanced Locked Column support.
Added more examples of Grids with Locked Columns and updated TouchTreeGrid to add support for thumb
so that user can resize locked grid width.  Updated primary projects to latest version of TouchTreeGrid
using Touch 2.4 framework.

- TouchTreeGrid modifications (refer to text:  "SWL UPDATED 1/17/2015"
   - Added logic to updateColumns() method to to correct for common error trying to indent by pct when width defined in pixels.
     Also updated to call prepLinkedGridsArr() method upon list refresh event for includeThumb config
   - Added logic to prepLinkedGridsArr() method to support Thumb to allow user to resize locked column width of Freeze/Locked column grids
   - New configs (refer to TouchTreeGrid_Documentation.pdf - Appendix D):  includeThumb {default false}, thumbConfig
   - Added onThumbDragEnd() method to handle dragEnd event  (standard processed)
   - Added onThumbDrag() method to handle drag event (optionally processed)
   
- Created TTG_LockedColumns project with following examples of Grids with Locked Columns:
   - Standard Grid #1 example with custom thumb to resize locked columns width 
   - Standard Grid #2 example)  (custom thumb phone only) to resize locked columns width.  Simulates EXTJS Big Data example using Touch.
   - Horizontal scrolling with Locked Column for large 600 data row with 28 data elements per row Tree Grid example with thumb for resizing.
     Also Demonstrates how to implement pinch event and buttons to reduce/expand grid size.
   - Provided TTG_LockedColumns.pdf with detailed documenation for above examples.
   
- Updated CalendarPicker project to include latest version of TouchTreeGrid.js and project updated to Touch 2.4 framework.
   - small change to creation of "legend" component within CalendarPicker.js initialize() method to handle heights correctly 
     for Touch 2.4.  Otherwise, no other changes to CalendarPicker.js component.
  
- Updated TTG_Forms project to include latest version of TouchTreeGrid.js.  
  
- Updated /ArchitectComponents/Architect 3.1.0 Build 1943/TouchTreeGrid.xdc
  
- Created TTG_KitchenSink example to consolidate all examples utilizing TouchTreeGrid with Touch 2.4 framework.  Links to other projects are also included.

- Removed projects TTG_Slider_2.4 and TouchTreeGrid_FreezeColumn projects.
   
- All changes to TouchTreeGrid and CalendarPicker are backward compatible.   

- Refer to Appendix C in TouchTreeGrid-Documentation.pdf for how to upgrade TouchTreeGrid/CalendarPicker in your Architect projects.



**************************************************************************************************
1/13/2015 COMMIT CHANGE LOG: 

- Added onScrollOptions:{} config back to TouchTreeGrid.js to support grids with freeze/locked columns
  (was inadvertently removed)
- Updated TTG_Forms and TTG_Slider_2.4 projects to include corrected version of TouchTreeGrid.js


**************************************************************************************************
1/12/2015 COMMIT CHANGE LOG: 

- Added support to embed forms with editable components in Tree Grid Category and Content (aka leaf) rows.

- See example at:  http://www.gomainerentals.com/Sencha/TTG_Forms/index.html

- Refer to TTG_Forms project for specific examples and TTG_Forms.pdf in same directory for detailed documentation
  on how to implement Forms within your grid.
  (Same examples also added to TTG_Slider_2.4 which is the defacto "Kitchen Sink" for various uses of TouchTreeGrid
   and where the latest version of TouchTreeGrid.js can always be found)
  
- Updated TouchTreeGrid.xdc in ArchitectComponents "Architect 3.1.0 Build 1943" directory

- All modifications to TouchTreeGrid for this release are backward compatible

- Summary of Changes to TouchTreeGrid.js:  (search on text "SWL added JAN2015")
   > Updated doRefreshList() method to define renderers.renderer_myForm
   > Added renderer_myForm() method to handle rendering of form within grid
   > Added following supporting methods for form components:
     handleFormTextfieldBlur(), handleFormTextareaBlur(), handleFormTextfieldClearicontap(),
     handleFormSelectfieldChange(), handleFormCheckboxfieldChange(), handleFormRadiofieldCheck()

**************************************************************************************************
11/23/2014 COMMIT CHANGE LOG: 

- Added configs to TouchTreeGrid:  cssSimpleRow and styleSimpleRow which add support for row styling for standard grids
   > feature already supported for tree grids- Upgraded TTG_Slider_2.4 project to Touch 2.4
   > Modified TouchTreeGrid updateColumns() method to process these configs 
     (refer to 4 changes with comment "SWL added 11/22/14")
     
- Created Architect 3.1.0 Build 1943 version of TouchTreeGrid and CalendarPicker in ArchitectComponents directory.

- Added example on how to implement checkcolumn for TreeGrid and standard grid.   
   > See example at:  http://www.gomainerentals.com/Sencha/TTG_Slider_2.4/index.html
   > Project #3 for TreeGrid
   > List Basic #2 for standard grids (also demo cssSimpleRow for conditional row styling)
   
- All modifications to TouchTreeGrid for this release are backward compatible


**************************************************************************************************
03/11/2014 COMMIT CHANGE LOG: 

- Corrected issue introduced with Touch 2.3 with CalendarPicker matrixPrep() method when referencing container layout type.
- Created Architect 3.0.3 Build 1382 version of TouchTreeGrid and CalendarPicker in ArchitectComponents directory.
- Created TouchTreeGrid_Advanced_23 directory under Touch 2.3 version.
- CalendarPicker project updated to Touch 2.3 version.


**************************************************************************************************
10/27/2013 COMMIT CHANGE LOG: 

Added logic to controller launch() method for ./MenuEx/ project as workaround for menu left/right edge swipe
as Sencha 2.3 codebase appears to have a bug.  This logic should be removed once fixed. 

Removed minHeight and maxHeight from "header" config for TouchTreegrid.js and updated TouchTreeGrid.css with height attribute.
This allows Grid Headers to be totally configured via CSS instead of having to update "header" config of linked TouchTreeGrid instance
everytime header height needs to be adjusted from default.

New relavant CSS code should look like this as default (refer to TouchTreeGrid.css in download):

.x-touchtreegrid-list .touchtreegrid-header {  /* Titlebar with column headers  */
    padding: 10px 0 0 0;    /* UPDATED 10/26/13 */
    margin:0;
    color: #fff;
    font-size: 13px !important;   /* UPDATED 10/26/13 */
    height: 32px;  /* ADDED 10/26/13 ... also removed heights from header config */
    
    background:  etc...
} 

Note:  Heights specified in pixels to line up grid rows for synchronized scrolling for different font size scenarios.

Modified onScroll() method of TouchTreeGrid.js to fix issue with synchronized scroller indicator.

Updated "TouchTreeGrid - Documenation.pdf" and all provided examples accordingly.

Software download plus demo links (see README.md) found at https://github.com/swluken/TouchTreeGrid

Regards,
Steve Luken

*** TouchTreeGrid Modifications ***
- Cleaned up Height settings in examples.
    
*** CalendarPicker Modifications ***
- Cleaned up Height settings in examples.
-

**************************************************************************************************
10/19/2013 COMMIT CHANGE LOG: 
    
*** CalendarPicker Modifications ***

- Added config:
   - alwaysScrollToTop = false (default) to scroll to first month with pre-selection.
   
- Modified onScrollerRefresh() method to apply alwaysScrollToTop config
   
- Modified Example 2c to always scroll to top

- Update "CalendarPicker.pdf"

- Updated CalendarPicker, and CalendarPicker_Basic directory examples (Touch 2.3)
  and updated CalendarPicker.XDC  



**************************************************************************************************
10/15/2013(2) COMMIT CHANGE LOG: 

*** New TouchTreeGrid with Menu Example ***
Created new ./MenuEx/ project directory that simplifies how to utilizes new slider menu in Touch 2.3 
with TouchTreeGrid menu items.  Also demonstrates other styles of Menus implemented within Controller code.

Software can be downloaded at https://github.com/swluken/TouchTreeGrid

See demo at:  http://www.lincolnwaterfrontrentals.com/Sencha/MenuEx/app.html

No updates to TouchTreeGrid.xdc or CalendarPicker.xdc Architect components other to upgrade to 
most recent version of Architect version 2.2.3 Build 1044.

**************************************************************************************************
10/15/2013 COMMIT CHANGE LOG: 

*** New TouchTreeGrid Examples ***
Created new ./TTG_Slider2/ project directory that utilizes new slider menu in Touch 2.3 
This version of Slide Navigation corrects the prior issues for Windows 8 phones.

*** Modifications that require updates to prior implementations *** 
    None. Only the examples were modified.
    
*** TouchTreeGrid Example Modifications ***
 - Modified CSS in treegriddemo.css for Horiz Scrolling and Dynamic Grid examples to correct
   item heights and increased font size.
 - Modified MainContainer.js view to define Touch 2.3 slider menu in methods:
   myMenu(), menuForSlide() and doSetHidden()
 - Modified controller methods in numerous places based on new menu.


- Update "TouchTreeGrid - Documentation.pdf".  
  Refer to new section titled: "Touch 2.3 Menu Implementation using TouchTreeGrid"

- Created new TTG_Slider2 directory with Touch 2.3 and Architect Version: 2.2.3 Build: 1039 


**************************************************************************************************
10/14/2013 COMMIT CHANGE LOG: 

- Added default getShortDayName() method if not defined for specific language.

**************************************************************************************************
10/13/2013 COMMIT CHANGE LOG: 

*** New CalendarPicker Features and Examples ***
 Added support for international calendars including examples of 44 different languages.
 Soliciting corrections, updates and additional language definitions.
 
 Notes:  
     - Date translations extracted from EXTJS 4.2 locale files and should be verified
       (refer to ./app/controller/languageMixin.js and documentation at top of file in addition to 
        Appendix D of CalendarPicker.pdf for language-specific configs)
     - Holiday Dates are US and for illustration only and would need to be customized for each language.
     - Some of the examples require additional localization logic including Legends, titles and button text.
     - It is suggested that you leverage useIconsForExpCollapse=true config to display Expand/Collapse as arrows
       for international usage

*** Modifications that require updates to prior implementations *** 
    None (all modifications are backward compatible)
    
    Exception:  Sencha updated following PullRefresh Plugin configs from 2.2.1 to 2.3:
      - pullRefreshText is now pullText
      - pullReleaseText is not releaseText
      
      CalendarPicker initialize() method updated accordingly for setListPlugins({...}) so you will need
      to revert these differences if implementing this version of CalendarPicker in prior 2.3 implementations. 
    
*** CalendarPicker Modifications ***

- Added configs:
   - weekendIndexArr = [0,6] (default) to represent weekday index positions that would be disabled via disableWeekends configs
   - footerBtnTextOverrides = {}  (allows override of footer button text.  
        Example :{DONE: 'OK', Clear: 'Clr', Cancel: 'Cxl', Expand: 'Exp', Collapse: 'Col'}
   - longDayFormat = 'F d, Y'  (not currently used in existing examples)
   - monthYearFormat = 'F Y'  (used to display Month-Year header for each calendar
   - startDay = 0  (set to 1 [Monday] for ISO-8601 countries per http://en.wikipedia.org/wiki/Names_of_the_days_of_the_week)
   - monthsToInsertLastUpdatedText = 'Last Updated:&nbsp;'  (text for pull to insert months after updated)
   - monthsToInsertLastUpdatedDateFormat = 'm/d/Y h:iA' (date format after pull to insert months)
   - monthsToInsertLoadedText = 'Loaded.'  (display after pull to insert months)
   - monthsToInsertLoadingText = 'Loading...'  (display while pull to insert months)
   
- Modificed configs:
   - customFooterItems:  added textType config to each of the buttons to support switching between languages
    
- Modified createStore() method to call Ext.Date.getShortDayName(day) for international week day names and to process startDay config
- Mofidified initialize() method to process new configs
- Updated onLeafItemTap() method of yearMonthSelect.js  to handle international short month names correctly
- Added isObjectEmpty() method to CalendarPicker (also exists in TouchTreeGrid.js)

- Modified renderer function cls_renderer_dates as follows to support new weekendIndexArr[] config:
   replaced :      if (Ext.Date.format(dt, 'w')==='0' || Ext.Date.format(dt, 'w')==='6') {
       with :      if (par.getWeekendIndexArr().indexOf(parseInt(Ext.Date.format(dt, 'w'))) !== -1) {

- Modified renderer function renderer_month to following to support new monthYearFormat config:
   renderer_month: function (values)
    {var par = this.scope.parent, dt;
      dt = Ext.Date.parse(values.year + '-' + values.mo + '-01', 'Y-m-d');
      return Ext.Date.format(dt, par.getMonthYearFormat());}
   
- Modified examples accordingly including following:
  - Added languageStore.js allow for test selection of 44 different languages for evaluation purposes.
  - Added language selector and controller action to process select field change event
  - Added languageMixin.js referenced by DateExamplesController.js to allow for language-specific customization 
    to CalendarPicker.  
       => Soliciting additions/corrections for existing/new languages

- Update "TouchTreeGrid - Documentation.pdf" (page 1 version summary) and "CalendarPicker.pdf"

- Updated CalendarPicker, and CalendarPicker_Basic directory examples to Touch 2.3
  and updated CalendarPicker.XDC to Architect Version: 2.2.3 Build: 1039 


**************************************************************************************************
10/9/2013 COMMIT CHANGE LOG: 

*** New TouchTreeGrid Features and Examples ***

  Added configs and methods to support multiple linked grids for synchronized scrolling and sorting.
  Unlimitted combinations of Freeze columns in conjunction with horizontal scrolling columns supported
  for both Simple Lists and Tree Grids.
  
  Created simplified TouchTreeGrid_FreezeColumn project directory featuring the following:
    1) Freeze column example for TreeGrids using US Census data.
    2) Touch Freeze column example with data grouping simulating EXTJS 4.2 Kitchen Sink Big Data grid example
       (utilizes Sencha provided BigData dummied json data)
    3) Example of how to utilize headerTplOverride config to create grouped header columns
       (Note:  column sorting within sub-grouped headers not yet supported)
    4) Refer to TouchTreeGrid_FreezeColumn.pdf in same directory for specific documentation on these examples.
  
  Also added Tree Grid Census "Freeze Column" example to TTG_Slider project directory.


*** MODIFICATIONS THAT REQUIRE UPDATES TO PRIOR IMPLEMENTATIONS *** 
    None.  
    
*** TouchTreeGrid Modifications ***

- Added configs:
   - linkedGridsParentItemId - only applicable when linking grids for synchronized scrolling.  This is itemId of container
     that is parent to all of the linked grids (used to do component searches up and back down to each linked container)
   - onScrollOptions = optional options object passed when processing scroll event for linked grids to fine tune processing of 'scroll' event
                       =>  scroller.on('scroll',   me.onScroll, me, onScrollOptions);
   - linkedGridsArr - array of objects where each object references one of the other linked grids with following attributes:
      {
       itemId          = itemId of linked TouchTreeGrid instance (required)
       item            = internally updated as actual object reference for itemId
       scroller        = internally updated as actual scroller object reference for itemId
       onScrollOptions = internally updated as onScrollOptions object for itemId (if defined)
      }

- Added onScroll(), prepLinkedGridsArr() and removeColumnSorts() methods to handle multiple linked grids.
- Updated initialize() method to initialize event handlers for scrolling linked grids.
- Updated handleColumnSort() method to call removeColumnSorts() for multiple linked grids. 
 
- Updated "TouchTreeGrid - Documentation.pdf" for new configs.  Refer to "Census Freeze Column Example" section for detailed documentation
  on implementing freeze columns for TreeGrids.
  
- IMPORTANT TIP:  When defining widths in Pixels/em's for horizontal scrolling TreeGrids you need to set following
                  configs to avoid TPL compile error:
                  => colNumberToTruncateForIndents = 0
                  => categIndentPct='0'  

-  Created new TouchTreeGrid_FreezeColumn project directory for simple list and TreeGrid freeze column examples.

- Updated TouchTreeGrid.xdc and TouchTreeGrid.js in TouchTreeGrid_Advanced_22, TTG_Slider,
  TouchTreeGrid_Basic_22, CalendarPicker, and CalendarPicker_Basic directories.


**************************************************************************************************
10/2/2013 COMMIT CHANGE LOG: 
- Corrected bug with handleColumnSort() method of TouchTreeGrid.js introduced with last commit.

**************************************************************************************************
9/30/2013 COMMIT CHANGE LOG: 

*** New CalendarPicker Features and Examples ***
- Support auto-generation of Calendar Matrix view (intended for Tablets only).
- Refined Day Planner examples for Year/Month/List/Day views implemented unique for Tablets vs. Phones.
    - Automatically apply custom date descriptions to Month and Day calendars.
    - Support month and day taps to quickly navigate bewtween each of the views.
    - Support swipe to navigate to next/previous calendar months.  
    - Also created new "yearMonthSelect" component utilizing TouchTreeGrid
      to support rapid navigation between calendar months.
- Added more configurations and CSS selectors to further customize calendar implementations.

*** MODIFICATIONS THAT REQUIRE UPDATES TO PRIOR IMPLEMENTATIONS *** 
    None.  
    Refer below to "categorypicker.css" additions and updates.
    
*** TouchTreeGrid Modifications ***
- Updated updateColumns() and doRefreshList() methods as follows:
   - Replace all <p> tags with <div> tags in updateColumns() and doRefreshList() methods
     when generating category, content and header row TPL.  This allows for more flexibility
     when generating HTML within calendar cells (Matrix Month view discussed below)
   - Corrected bug with unmatched tag in updateColumns()
   - Remove unnecessary DIVs in updateColumns() when arrowPctWidth, CategIndentPct are 0.
   - Corrected bug in updateColumns() method when applying categColumns[] widths


*** CalendarPicker Modifications ***
- Added matrixView config (default = false) to display each calendar in grid matrix (intended for Tablets only)
    - added matrixPrep() method to generate matrixView within matrixContainer.      
    - support auto-generated legends for Matrix View using existing includeCustomDatesLegend config.
    - added matrixCols  config (default = 3 matrix columns)
    - added matrixRows config (default=99 ... as many rows as needed)
    - added matrixContainer{} config which defines the container object for which the calendar matrix will be fit into.  Layout must be
      'fit'.  Flex 1 will be applied to each column.  User can specify specific height for each matrix panel
      via matrixItemHeight config (or matrixItem6WeekHeight for months with 6 week rows).
    - Added allowMatrixMonthAdditions config (default = false).  Uses existing monthsToAppend to automatically insert button at 
      bottom of calendar matrix to allow user to add more months to Year view.
    - Added disableListScroll config (used by Matrix view) to disable scrolling of individual calendars in Matrix View.
      Updated loadStore() method.        
  
- Replaced Day Planner Example 4 for Tablets display Matrix view with styled Year, Month, List and Day
  views and support following navigations:
  - Tap on any day within Year view to navigate to Day view
  - Tap on month header within Year view to navigate to Month view
  - Tap on any day within Month view to navigate to Day view
  - Swipe left or right in Month view to change months
  - Tap <> icon within Month or Day view to select any year+month using new "yearMonthSelect" component which implements TouchTreeGrid
  - Tap <Today> in Month or Day view to navigate to current Month/Day
  - Tap any day within Day view to select new day and update list details (if defined)
  - Swipe within month calendar of Day view to change months
  - Swipe within list detail of Day view to change days
  
- Replaced Day Planner Example 4 for Phones to display linear calendar view of years and also
  implemented List and Day views with same navigations as for Tablet discussed above.
  
- Added Tablet Matrix view to Example 7 (Option Expirations).  
  
- Added calendarDetailController.js, matrixView.js, matrixViewPhone.js to support Example 4 and 7.

- Created new yearMonthSelect.xdc component that uses TouchTreeGrid to prompt user for Year+Month selection
  within Day Planner examples.

- Updated initialize() method to destroy "hidden" components and to only add titlebar/legend containers if requested
  (also removed them CalendarPicker config)

- Support negative forwardMonths config to display individual months in past.

- Added customDatesLegendScrollDock config  (does not currently apply to matrixViews which always dock to top of container)
   - 'fixed' (default) - legend is fixed at top of container
   - 'top' - legend docked to top of list and scrolls with list.
   - 'bottom' - legend docked to bottom of list and scrolls with list
   - 'both' - legend docked to top and bottom of scrolling list
   
- Updated font-size and padding for default category (month) styling in categorypicker.css:
     font-size: 1em !important;
     
- Added more selectors to calendarpicker.css:
   .calendarpicker-matrix-item {margin: .5em}
   .calendarpicker-matrix .matrix-row {}
   .calendarpicker-matrix .matrix-row-last {}
   .calendarpicker-matrix .matrix-column {border: 1px solid gray;}
   .calendarpicker-matrix .matrix-column-last {border: 1px solid gray;}
   .calendarpicker-matrix .x-scroll-container {background-color: white;}
   .calendarpicker-matrix .matrix-column-empty {border: none;}  
   .calendarpicker-legend-cls-html { padding-left: .5em;}   /* style html in legend */
   .calendarpicker-matrix-add .x-title {...}
   .calendarpicker-matrix-add {...}
   
- Created new CalendarMatrix.css (must be added after calendarpicker.css) to support
  Year/Month/List/Day calendar views for Example 4 and 7.   
   
- Updated .calendarpicker-legend {
    font-size: .7em;   
    background-color: white;
    border-bottom: 1px solid gray;}
    
- Added tag.png to ./resources/css/ directory for <> icon used in "yearMonthSelect" component    
     
- Added .x-touchtreegrid-list-calendar .x-scroll-container { 
    /* background Scroll container same color as category rows */
        background-color: white;}
        
- Styling updates to provided examples.

- Updated CategoryPicker.xdc in ./CalendarPicker/ and ./CalendarPicker_Basic/ directories

- Update ./CalendarPicker_Basic/ example with updated component and calendarpicker.css

- Updated TouchTreeGrid.xdc in Touch 2.2, TTG_Slider, CalendarPicker, and CalendarPicker_Basic directories.


**************************************************************************************************
9/9/2013 COMMIT CHANGE LOG:  

*** MODIFICATIONS TO CALENDARPICKER COMPONENT *** 
- Updated CalendarPicker.pdf
- Further documented the examples in DateExamplesController.js
- Updated Example 2c to make background transparent behind modal window (same as Example 2b)
- Updated custom.css

*** NEW CALENDARPICKER BASIC EXAMPLE *** 
- Basic calendar implementation found in ./CalendarPicker_Basic/ directory

**************************************************************************************************
9/8/2013 COMMIT CHANGE LOG:  

New CalendarPicker Features and Examples:

   - IPhone-style calendar layout examples
       - Range selection (Example #2B).  Also changes background transparency to white instead of default gray behind modal panel.
       - Form textfield selection (Example #2C)
       - Financial DayCount (Example #6)
       
   - Added Financial Calendar examples
       - Daycounts from today using custom day renderer (Example #6)
       - MarketWatch-style Options Expiration Calendar with auto-generated Legend (Example #7)
       
   - Support for multiple categories of custom dates within same calendar, each with unique styling and auto-generated Legend (Example #7)
   
   - Sped up Expand All/ Collapse All for large calendars.
   
   - Enhanced logic to auto-scroll to first month with pre-selected dates.
   
   - Added pull-refresh style option to allow user to insert more months into beginning of calendar (Example #2C).
   
   - Added paging-plugin style option to allow user to append more months at end of calendar (Example #2B).

*** MODIFICATIONS THAT REQUIRE UPDATES TO PRIOR IMPLEMENTATIONS *** 
    None
 
*** MODIFICATIONS TO CALENDARPICKER COMPONENT ***    

  - Updated Component:  CalendarPicker.js, CalendarPicker.xdc  
  - Updated CSS Files:  calendarpicker.css, custom.css.  Additions to calendarpicker.css include:
      .customDates-default {background-color: orange;}
      .calendarpicker-legend {font-size: .7em;}
      .calendarpicker-legend-cls-override {} 
   
  - Updated initialize() method to correctly process configs for itemHeight and variableHeights.
  - Config 'customExpCollapseEvent' defaulted to 'monthExpCollapse' and handled by component unless overridden by custom event name.
    Modified initiate() method to listen for monthExpCollapse event from TouchTreegrid and call new onExpCollapse() method
    to rebuild TreeStore for full Expand/Collapse operations as this has better performance than using
    Sencha-provided expand/collapse methods.
  - Added logic to unregister temporary stores from Ext.data.StoreManager for each instance of Calendar once destroyed by developer (new onDestroy method).
  - Updated loadStore() method to further improve performance and correct issue when expand/collapse all after prior selections
  - Updated customBtns() method for CLEAR:   dtPkr.setLastSelectedDate('');  
  - Cleaned up DateExamples view configs
  - Added customDateTypes[] config
  - Added expandCurrentMonth config  (ignored if collapsing all via bottom toolbar button, or if auto-expanding months with prior-selected dates after current month)
  - Added monthNodeHeightInPixels config (default = 32 pixels).  Needed for scroller to scroll to correct month
  - Added allowMonthAdditions (default false) and monthsToAppend/monthsToInsert (default 3 months) configs.  Following related configs also added:
     - If monthsToInsert>0 then pullRefresh style plugin implemented to allow user to insert months at start of Calendar (currently supported for Touch 2.2+ versions only)
       (Note:  need to keep track of new backMonths/forwardMonths in case user relaunches calendar to review selections 
               ...refer to onExample2C_TextfieldClosed() and onExample2C_Textfield() for example
     - monthsToAppendText: 'Append more Months...',
     - monthsToInsertPullText: 'Pull to Insert Months...',
     - monthsToInsertRefreshText: 'Release to Insert Months...',  
  - Updated default "renderers" config to support custom dates (customType = 'default')
  - Added Container itemId = 'calendarpicker-legend' for optional custom dates legend.
    Added corresponding config:  includeCustomDatesLegend
 
  
*** MODIFICATIONS TO TOUCHTREEGRID COMPONENT ***       
    None

**************************************************************************************************
8/25/2013 COMMIT CHANGE LOG:  
Summary:  Modifications to support IE10.  Added Configs such that all styling can be supported via CSS (vs. Style).
          Added more flexible features to TouchTreeGrid to support new "CalendarPicker" component.

*** MODIFICATIONS THAT REQUIRE UPDATES TO PRIOR IMPLEMENTATIONS ***
  All changes are backward compatible with the EXCEPTION that CRUCIAL configs [styleContentRow, styleCategRow, styleHeaderRow]
  are replaced with following new configs as the default:
     cssContentRow: 'css-content-row ',
     cssCategRow: 'css-categ-row ', 
     cssHeaderRow: 'css-header-row '
  
  If your implementations always accepted the default values for styleContentRow, styleCategRow, styleHeaderRow configs, then 
  you should not require code changes so long as you upgrade both TouchTreeGrid.js and TouchTreeGrid.css.
  Notes:  1) TouchTreeGrid.css updated with new css configs and also to support IE10 (refer below).
          2) Slide Navigation in TTG_Slider still requires further modifications for IE10, 
             but TouchTreeGrid_Advanced_22 and CalenderPicker work in IE10.


*** MODIFICATIONS TO TOUCH 2.2x TOUCHTREEGRID VERSION COMPONENT (2.1x version not updated) ***  

- Refer to "TouchTreeGrid - Documentation.pdf", Appendix D for new/updated config summary (red text with 8/25/13 datestamp).

- updateStore() method modified to correctly apply css defined in columns[] array for TreeGrid content rows (Bug fix).

- Added configs:  cssContentRow: 'css-content-row ', cssCategRow: 'css-categ-row ', cssHeaderRow: 'css-header-row '
  (space-delimited list of CSS selectors to apply to that row to be used instead of styleContentRow, styleCategRow, styleHeaderRow)
  Updated updateStore(), updateColumns(), doRefreshList() methods accordingly.
    -   Added corresponding selectors to TouchTreeGrid.css to also support IE10.  Note:  TTG_Slider example still requires further 
        modifications for IE10 as Slide Navigation does not work correctly.  TouchTreeGrid_Advanced_22 does work correctly for IE10
        with below changes to TouchTreeGrid.css (although few styling changes still outstanding):
    
            .x-touchtreegrid-list .css-categ-row {
                display: flex;
                display: -webkit-box;
                display: -ms-flexbox;
                flex-direction: row;
                -webkit-box-orient: horizontal;
                -ms-flex-direction: row;
            }
            .x-touchtreegrid-list .css-content-row {
                display: flex;
                display: -webkit-box;
                display: -ms-flexbox;
                flex-direction: row;
                -webkit-box-orient: horizontal;
                -ms-flex-direction: row;
            }
            .x-touchtreegrid-list .css-header-row {
                display: flex;
                display: -webkit-box;
                display: -ms-flexbox;
                flex-direction: row;
                -webkit-box-orient: horizontal;
                -ms-flex-direction: row;
            }
            
*** Changed default for configs styleContentRow, styleCategRow, styleHeaderRow
        from:  'display: -webkit-box; -webkit-box-orient: horizontal;'
          to:  ''
          
- Added "max-height: 18px;" to TouchTreeGrid.css:
        .x-touchtreegrid-list .touchtreegrid-details-img {   /* category row arrow */
             max-height: 18px;  /* Added 8/24/13 */   
 
- Added lines to doExpandDepth() to correct issue when scrolling to bottom of fully expanded list, then collapsing.
    var scroller = list.getScrollable().getScroller();
    scroller.scrollTo(0,1);           
    
- Modified doRefreshList() method when re-creating collapse-to buttons to support addition of custom button object
  to footer toolbar via new customFooterItems{} object and includeCustomFooterItems boolean configs.
  
- Added footerDock (default='bottom') config to allow footer to be docked above Header.  Modified applyFooter() method.

- Added hideExpandCollapseBtns boolean config to hide Expand/Collapse buttons, but allow addition of customFooterItems{}




7/9/2013 COMMIT CHANGE LOG:
Summary: Minor updates to better support Dynamic grids and individual cell taps.

*** MODIFICATIONS THAT REQUIRE UPDATES TO PRIOR IMPLEMENTATIONS ***
  No configuration updates required.  All changes are backward compatible to prior release.

*** MODIFICATIONS TO TOUCH 2.2x TOUCHTREEGRID VERSION COMPONENT (2.1x version not updated) ***  
- updateStore() method modified to create temporary store if not defined within configuration 
  for purposes of supporting dynamic grids without requiring creation and reference to temporary store:
      if (newStore === "") {
        newStore = Ext.create('Ext.data.Store', {fields: {"name" : "dynamic"}});
      }  
  Store config removed from DOW2012 Dynamic example and DynamicStore.js removed from TTG_Slider and
  TouchTreeGrid_Advanced_22 projects (Store and Controller reference).
  
- Updated updateColumns() method to add 'dataIndex = "column name"' attribute to each cell DIV if columns
  array has addDataIndexToDiv=true config for that column.  This inserts unique identifier for each DIV representing
  the row and allows for trapping of unique cell tap (same method for how header cell tap works).
  Note I didn't want to pollute the DOM by globally adding this to DIV for all cells by default. 
  Added "addDataIndexToDiv: true" attribute to column[] array for Horizontal Scrolling and Dyunamic grid 
  examples (columns CloseDate and ClosePrice only).
  Refer to onHorizGridLeafItemTap() and onDynamicGridLeafItemTap() methods within ListsController
  (TTG_Slider and TouchTreeGrid_Advanced_22 projects)
  
- Refer to documenation "Lists => Horiz (DOW History Example with Horizontal Scrolling" (Program Flow section)
  on how to simulate a hyperlink substring within the text of a specific cell.

- Documenation updated per above.  Refer to "Appendix C - Upgrading TouchTreeGrid component" in 
  "TouchTreeGrid - Documentation.pdf" for how to upgrade your component within Architect.


6/18/2013 COMMIT CHANGE LOG:
Summary:  Fixed scrolling issue with Horiz and Dynamic examples.

- Deleted "height: 1000" config from all linked instances.
- Fixed minHeight issue when scrolling menu for Tablets after collapse
  followed by manual expand of each category
  

6/16/2013 COMMIT CHANGE LOG:
Summary: TouchTreeGrid as Slider Menu + TreeStore Filtering

NEW FEATURES AND EXAMPLES

   - New set of examples that utilize TouchTreeGrid component as 
     Accordion Slide Navigation Menu (i.e. Facebook style menu, but collapsible)
     for Phones and as scrolling collapsible category menu for Tablets.
        > All menu items easily defined in store 
        > Scrolling navigation menu with spring disabled such that user
          can not scroll past top or bottom of list.
   
   - Example of easy to implement TreeStore filter solution.  There are a few
     forum threads suggesting Sencha does not correctly support TreeStore filtering for
     Touch or EXTJS.  This example utilizes provided TreeStore generation algorithm
     to rebuild TreeStore from saved array applying custom filter conditions. 
       > Census Filter Ex#1
         (refer to "TouchTreeGrid - Documentation.pdf" for this example).
   
   - Examples of embedded images within grid cells
        > Sliding Menu => PNG file displayed on Category rows
        > Project Tree Examples => Project #3 displays checkmarks
          (Slide Navigation example only)
        
   - Example of leaf row rendering function using styleContentRow config:
        > Project Tree Examples => Project #3 rows shaded green where done
        > Use styleCategRow config to style category rows
   
   - Example of cell rendering function using CSS selector as opposed to Styles (Basic List #2).
     Allows red/green cells to display as white text with blue background when selected.
   
   - Added logic to differentiate handling of list disclose event vs. item tap as 
     tap of new Touch 2.2 disclosure icon triggers both events causing category rows 
     to expand/collapse when disclose event was intended.
     
   - Added logic to not allow expand/collapse of specific node if expandable=false
     for store defined node.
     
   - Support optional column[] array CLS references in lieu of Styles. Example:
     cls, sortedCls, categCls, categSortedCls, headerCls, headerSortedCls 
     instead of (or in addition to) existing style equivalents:
     style, styleSorted, categStyle, categStyleSorted, headerStyle, headerStyleSorted  
        > Lists => Dynamic
          Refer to ./data/dow2012dynamicCss.json for css-based column definitions
     
   - Support different CSS selectors for each category level.  
     Default selector is ".touchtreegrid-list-categ".  New config categCssArr[]
     allows for specification of different CSS selectors for each level in same
     way that categColorArr[] allows for basic color shading.
        > Projects => Ex #2
        > First category level in white italics using custom selector for that level.
          Remaining levels use default selector.

   - Corrected implementation of Grouper #2 example to work in Touch 2.2
     Issue found was that in 2.2 you can't use same Model for Store and a TreeStore
     (else you will observere strange behaviour when bouncing between two views
      configured as such)
         
   - All new Slider Menu examples found in ./TTG_Slider/ directory.
     Refer to "TouchTreeGrid - documentation.pdf" (Summary of Provided Examples) in download for
     further discussion on each of the examples.
    
   - "TouchTreeGrid - Documentation.pdf" updated for new examples and Slider Menu implementation.
          
See working Touch 2.2 Slider Demo at:
   <a href="http://www.lincolnwaterfrontrentals.com/Sencha/TTG_Slider/app.html?deviceType=Phone">TouchTreeGrid (Phone)</a>
   <a href="http://www.lincolnwaterfrontrentals.com/Sencha/TTG_Slider/app.html?deviceType=Tablet">TouchTreeGrid (Tablet)</a>

See 2.2 Sample code run under 2.1 framework:
   <a href="http://www.lincolnwaterfrontrentals.com/Sencha/TTG_Slider/app21.html?deviceType=Phone">TouchTreeGrid (Phone)</a>
   <a href="http://www.lincolnwaterfrontrentals.com/Sencha/TTG_Slider/app21.html?deviceType=Tablet">TouchTreeGrid (Tablet)</a>
 
Refer to CommitLog.txt for update summary.

Refer to "Appendix C - Upgrading TouchTreeGrid component" in 
   "TouchTreeGrid - Documentation.pdf" for how to upgrade your
   component within Architect.
 
 
PLANNED ENHANCEMENTS:      
    
   - Column sorting within TreeGrid categories.
   - Multi-column sorting feature
   - Support initially sorted shading feature      
   - Column show/hide/add/update example with accompaning methods
   - More renderer function examples
   - Easy config options to auto-add buttons to footer to "auto-display" different sets of columns 
     (or provide methods for custom buttons)
   - Support for editable cells
   - Possible support for locked columns   
   - Seeking interest on supporting config option to use Ext.dataview.DataView vs. Ext.dataview.List

*** MODIFICATIONS THAT REQUIRE UPDATES TO PRIOR IMPLEMENTATIONS ***
  No configuration updates required.  All changes are backward compatible to prior release.


*** MODIFICATIONS TO TOUCH 2.2x AND 2.1x TOUCHTREEGRID VERSION COMPONENTS ***
   - Provided Architect components generated using latest version of 
     Architect (v2.2.2 Build 991)
     
   - Added node.isExpandable() condition to onItemTap() method
     if (!disabledExpColl && node.isExpandable()) {
        
   - Added logic to onItemTap() method to ignore ItemTap if Disclose event processed
     Ref:  http://www.sencha.com/forum/showthread.php?261518-List-onItemDisclosure-ST-2.2

   - Added config categCssArr[] to allow different CSS selector for each category level.
     If not defined at all, or not for specific level then default 'touchtreegrid-list-categ' selector applied.
     
   - Added skipApplyDefaultCollapseLevel parameter to doRefreshList().  
     Added logic for columns.headerCss.
     Added logic to apply CSS to category rows by level if defined in categCssArr[] config. 
   
   - Added Ext.isEmpty() conditions to updateColumns() method to better handle missing column[] 
     array attributes.  Added logic for columns.css, columns.categCss, categColumns.css, categColumns.categCss.
     
   


*** Example Updates ***
 ./TTG_Slider/.
   - Added all new sliding mneu examples to this directory for both phone and tablet.
     Run app.html for Touch 2.2 and app21.html for Touch 2.1
   
 ./TouchTreeGrid_Advanced_22/.
   - Added examples Lists => Basic #2, Census => Census Filter Ex#1
   
 
6/2/2013 COMMIT CHANGE LOG:
Summary: Multiple new Features and Examples.

*** MODIFICATIONS THAT REQUIRE UPDATES TO PRIOR IMPLEMENTATIONS ***
 - Renamed "./TouchTreeGrid_Advanced_220/" directory to "./TouchTreeGrid_Advanced_22/"
   as this will always contain the latest version of Touch 2.2x  (currently 2.2.1)
   
 - Add following CSS selector to your TouchTreeGrid.css file
   (or simply replace your version with one in download as any
    custom CSS changes should really be done on your custom CSS file anyway):
     .x-touchtreegrid-list .touchtreegrid-header-cell {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: clip; 
     }   
-  In TouchTreeGrid.css removed the string 'LEFT CENTER' from end of
   'background' attribute in selectors: 
      '.x-touchtreegrid-list .x-grid-sort-desc'
      '.x-touchtreegrid-list .x-grid-sort-asc '
    (again, if you never change this file and only
     update your custom CSS file you can simply overlay the new file)    
     
- Add 'display: -webkit-box;-webkit-box-orient: horizontal;' to 
  following configs if these configs are customized in any linked instances of 
  TouchTreeGrid (not common):
  styleContentRow, styleCategRow, styleHeaderRow
  Note:  This style string is now the default for any future implementations. 
  
- Changed default for landscapeIcon config from './resources/images/Recycle.png' to ''
  If anyone was using the feature to display this icon when their phone was rotated
  to landscape position, they will need to redefine it for their linked instances.
  This is more of a nice-to-have feature and should not be a required resource for new implementations.

- Changed default data type for 'store' config from OBJECT to STRING.  
  Doesn't seem like Architect will allow entry of Ext.create.store(....) statements
  (or functions returning this) in an object as I was hoping. 
  Keeping the type as string will simplify use for most users going forward.
  I'm not expecting this to impact pre-existing implementations.  You can check
  store config in your generated views after upgrading the component and saving to see if anything
  was corruptted in the config and fix it back in Architect if ncecessary.
  

*** MODIFICATIONS TO TOUCH 2.2x AND 2.1x TOUCHTREEGRID VERSION COMPONENTS ***
 - TouchTreeGrid.xdc components (Touch 2.2x and 2.1x versions) converted to latest
   Architect Version: 2.2.2 Build: 991
 
 - Added config arrowPctWidth (default = 4%) to allow control over percent screen width
   that category arrow consumes (example: tablet configs would want to use less width ... 2%)
   Updated methods accordingly: updateColumns() and doRefreshList()
   
 - Added CSS selector "touchtreegrid-header-cell" to construction of Header cells
   and added entry to TouchTreeGrid.css.  Updated handleColumnSort() to reference this selector name.
   You can override via custom CSS file.
   Removed hardcoded styles in DIV statement within doRefreshList().
   Added width and max-width configs to defintion of header cell.
   
 - Added customColumnSortEvent config which if defined is the name of the event fired when
   handling column sort tap.  Built-in logic will be bypassed.  This allows for custom
   column sort functionality without modifying the component.  Example would be when
   sort needs to occur on the server-side or to toggle between more states:
   ASC, DESC, ABS(ASC), ABS(DESC), etc...  Refer to logic in 
   handleColumnSort() for parameters passed with event.
   
 - Modified handleColumnSort() to apply following new configs on the sorted column (if defined):
   styleSorted, categStyleSorted, headerStyleSorted
   
 - New config: categColumns[] (refer to example Lists=> Grouper2)
   This allows for separate definition of Category columns from Detail row columns.  
   I originally wanted to support this as an array of array (i.e. different configs for 
   each category level), but ran into performance issues and backed out the code to 
   only support one CategColumns config for all levels.  Since category rows share the
   same dataIndex, you can still populate and customize the display for each level to
   some extent.
   Note on implementation:  If updating categColumns[] in controller code, you MUST update 
   this config before updating columns[] config.  If you update categColumns[] within your
   linked view instance than order doesn't matter.
   
 - TouchTreeGrid styleContentRow config defaulted to 'display: -webkit-box;-webkit-box-orient: horizontal;' instead
   of hardcoding in updateColumns() method.  This allows for more developer control.  If custom styles
   were added via styleContent in  linked instances then those definitions need to be modified to include the "display.."
   string to function the same as before.  Note:  styleContentRow for TaskList example had to be modified
   as a result of this.
   
 - Same change made to styleContentRow and styleHeaderRow configs for same reason.   Updates are required to 
   linked instances to include 'display: -webkit-box;-webkit-box-orient: horizontal;' if either of these configs
   were previously used.
 
 - Added disableExpandCollapse config if it is desired to prevent expand/collapse when category rows pressed
  (default = false) for backward compatibility.  Note:  'nodeItemTap' event will still be fired.
   Modified onItemTap() method accordingly. Note:  expand/collapse buttons on footer will not be disabled
   in event this feature is still desired.
   
 - Removed 'height : 1.6em;' from '.x-touchtreegrid-list .touchtreegrid-header' selector in TouchTreeGrid.css
   to avoid confusion as Header heights can only be modified using header{} object in linked instance currently.
 



5/15/2013 Commit Change Log:
Summary: Sorting enhancement for grouped rows + New 2.2 Examples

Touch 2.2 modifications(./TouchTreeGrid_Advanced_220/ directory):

Modifications to 2.2 and 2.1 TouchTreeGrid components (all changes backward compatible)
 - Created new version of Touch 2.2 architect component:  TouchTreeGrid.xdc
 - Backward compatible mods to handleColumnSort() method within
   TouchTreeGrid component to support column sorting within
   Store Grouper rows.
 - Changed TouchTreeGrid layout from FIT to VBOX and height = '100%' is default
   when creating List component (this allows us to specify widths in pixels/em's
   to support Horiz scrolling .. if not defined than width = 100% is implied)
 - When creating list within updateStore() method, added logic to apply
   following configs to List component if defined in linked TouchTreeGrid 
   instance:  width, minWidth, height, minHeight
   (width, minWidth, height must be specified in pixels/em's for Horiz scrolling) 
 
Modifications to 2.2 examples:   
 - Created ListsContainer.js to house all simple list examples
    "Basic"   - DOW Hist with shaded rows
    "Grouper" - "Basic" with row grouper and column sorting
                within each grouping
    "Horiz"   - Horizontal scrolling example

 - Added 'grouper' and 'YearMonth' fields to Dow2012 Model
 - Created Dow2012grouper Store defining grouper/sorter
 - Created Dow2012Horiz Store
 - Alternate shading to DOW History example via treegriddemo.css
   Note sporadic shading issue will be fixed 2.2.1 release:
   http://www.sencha.com/forum/showthread.php?253800-Sencha-2.1-List-Zebra-Stripes-Working-Incorrectly       
 - treegriddemo.css updated for Horiz scrolling example to 
   make cell height = 47 pixels matching item list height
   (.x-touchtreegrid-list-dow2012Horiz .touchtreegrid-simplelist-cell).
 - Modified onMainTabpanelActiveItemChange() in Controller to load 
   DOW History store when Lists tab clicked
 - Added onListsTabpanelActiveItemChange() in Controler to load
   data for List examples (if not already loaded).  Included
   Initialize() function to disable horizontal scrolling and 
   make grid width match screen width > original grid width (576 pixels)
 - Removed styleCategRow confiig from "Basic" as not applicable
 - singleExpand = false (ProjectContainer, itemId='example2B')
 - Fixed link to GITHUB link in README.md
 - Updated HELP HTML files
 - Updated "TouchTreeGrid - Documentation.pdf"
   
Touch 2.1 modifications(./TouchTreeGrid_Advanced_21/ and
 ./TouchTreeGrid_Basic_21/ directories):
 - Updated Touch 2.1 architect component:  TouchTreeGrid.xdc
 - Refer to 2.2 for other component changes also made to 2.1 version.
 

5/6/2013 Commit Change Log:
NOTE:  Changes to Examples only...NO changes to TouchTreeGrid component in this commit.
Summary: Correct duplicate PullRefresh issue for DOW Hist example
 - Deleted TouchTreeGrid.xdc from parent directory to avoid confusion as each subdirectory
   contains Touch-specific versions:
     ./TouchTreeGrid_Advanced_21/TouchTreeGrid.xdc (Touch 2.1)
     ./TouchTreeGrid_Basic_21/TouchTreeGrid.xdc (Touch 2.1)
     ./TouchTreeGrid_Advanced_220/TouchTreeGrid.xdc (Touch 2.2)
 - ./TouchTreeGrid_Advanced_220/ modifications:
   > TouchTreeGrid.model.Dow2012 requires idProperty and unique values in store to prevent
     duplicates when refreshing data via PullRefresh
   > Replaced ./TouchTreeGrid_Advanced_220/data/dow2012.json to include unique ID values

5/4/2013 Commit Change Log:
Summary:  Modified PullRefresh implementation as Touch 2.2 removed support for refreshFn
 - Added pull refresh to dow2012 example (maintabpanel.js) via "listPlugins : {xclass: 'Ext.plugin.PullRefresh'}"
 - Replaced refreshFn event handling in example2 (ProjectContainer.js) with new Touch 2.2 event "latestfetched"
   via listPlugin config.  Workaround to snap list back after manually loading data for this example is 
   to modify loadExample2Store() function within TouchTreeGridController.js to pass scrollToY = 1 to
   loadStore() function to reset scroller after loading data.

5/3/2013 Commit Change Log:
 - Touch 2.2 code version contained in subdirectory:  ./TouchTreeGrid_Advanced_220/
 - Renamed directory ./TouchTreeGrid_Advanced/ to ./TouchTreeGrid_Advanced_21/ for prior Touch 2.1 code version 
 - Renamed directory ./TouchTreeGrid_Basic/ to ./TouchTreeGrid_Basic_21/ for prior Touch 2.1 code version 
 - Touch 2.2 version of TouchTreeGrid.xdc stored to subdirectory: ./TouchTreeGrid_Advanced_220/
 - Touch 2.1 version of TouchTreegrid.xdc moved to subdirecotries: ./TouchTreeGrid_Advanced_21/, ./TouchTreeGrid_Basic_21/

Following applies to Touch 2.2 code version in subdirectory:  ./TouchTreeGrid_Advanced_220/
 - Added .x-list-normal .x-list-item.x-list-item-tpl selectors to TouchTreeGrid.css and treegriddemo.css for removing horizontal lines
 - Modified Census column widths [loadColumnsCensusMain() within TouchTreeGridController.js]
   to not exceed total 90% (phone portrait) or 95% (phone landscape), 97% (tablets) allowing for new 2.2 disclosure icon
 - Removed CSS for .touchtreegrid-disclose-spacer  as no longer needed
 - Added .x-list-disclosure:before selector to treegriddemo.css to disable arrow picto from overlaying Example #2 I-Phone style icon:
   .x-touchtreegrid-list-example2 .x-list-disclosure:before{  
     content: '';
     font-family: '';
   }
 - Added Style: background-image: -webkit-linear-gradient(top, rgb(86, 167, 223), rgb(43, 145, 215) 3%, rgb(33, 117, 175));
   to Project Tab Bar to be consistent with 2.1 examples as ui='light' not working in 2.2
 - Added useSimpleItems config (default = true)
 - Added infinite config (default = true)
 - Removed padding/margins in Census detail panel fieldsets which were added to .x-form-fieldset by Touch 2.2 
 - Updated TPL for Manual example to work with Touch 2.2
 - Updated documentation on CSS changes and on new 2.2 LIST configs (useSimpleLists, infinite)
 - Removed empty entries in censusmaine2000TREE.json
 - Modified main.js to reference Touch 2.2 supported icons for demo tabs
 - Removed custom icons from treegriddemo.css
 - Updated documentation consistent with above.

4/17/2013 Commit Change Log:
 - Updated documentation
 - Update README on enhancements in progress.
 
4/15/2013 Commit Change Log:
 - Added support for Standard Grid lists with column sorting
 - Added support for traditional Accordions with singleExpand
 - Added associated CSS selectors
 - Updated documentation

3/30/2013 Commit Change Log: 
 - Modified name of leafitemtap event to "leafItemTap".
      > Parameters: me, list, index, target, record, e
 - Created new event "nodeItemTap" (instead of using itemtap event) 
      > Parameters: me, list, index, target, record, e
 - Updated onItemTap function within TouchTreeGrid class based on above
 - Updated controller functions in examples (Basic and Advanced) consistent with above new events and renamed functions for firstExample to:
      > onFirstExampleLeafItemTap()
      > onFirstExampleNodeItemTap()
 - Updated following in Architect for both examples to simplify future TouchTreeGrid component upgrades
      > targetType changed from 'TouchTreeGrid' to 'Ext.Container'
      > control query updated to: container#firstexample
      > updated parameters consistent with above
 - Updated help HTML with code snippets
 - Updated TouhTreeGrid.css and treegriddemo.css
 - Added Project2 and Project3 examples and moved Project1 into own Tab Panel to show how CSS styling can be used to customize Project example
      > Modified onExample2ListDisclose() and created onExample2BListDisclose()
      > Updated onGridDetailBackButtonTap() to be generic for both examples
      > Modified onMainTabpanelActiveItemChange() to load data regardless of which tab is selected (same store)
      > Updated loadExample2Store() to include gridcont parameter 
      > Updated hideShowPanels() and onTitlebarGridhelp()
 - Updated onExample2ListPullrefresh() to include parameter for for current touchtreegrid container
      > targetType changed from 'TouchTreeGrid' to 'Ext.Container' to simplify future TouchTreeGrid component upgrades
 - Trapping help click event on entire Titlebar instead of just help icon
 - Project example (#1) also traps itemtaphold event for long presses to better handle sensitivity issues with smaller icon for disclose event
   See onExample2ListDisclose(), onExample2ListDisclose() and onExample2ListItemTaphold().			
 - Updated "TouchTreeGrid - Documentation"																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																																														
 - Updated TabBar icons at bottom for each example