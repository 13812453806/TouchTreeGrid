/*
 * File: app/view/Dow2012HorizCont.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TouchTreeGrid.view.Dow2012HorizCont', {
    extend: 'Ext.Container',
    alias: 'widget.dow2012HorizCont',

    requires: [
        'Ext.Container'
    ],

    config: {
        itemId: 'dow2012HorizCont',
        layout: 'hbox',
        scrollable: {
            direction: 'horizontal',
            directionLock: true
        },
        items: [
            {
                xtype: 'touchtreegrid',
                store: 'Dow2012Horiz',
                columns: [
                    {
                        header: 'Close<br>Date',
                        dataIndex: 'CloseDate',
                        width: '6em',
                        style: 'text-align: center; font-weight: bold; color: #008abc; border-right: 1px solid #9b9b9b;',
                        styleSorted: 'text-align: center; font-weight: bold; color: #008abc; border-right: 1px solid #9b9b9b; background-color: #dedede',
                        headerStyle: 'text-align: center;',
                        headerStyleSorted: 'text-align: center; background-color: #dedede',
                        renderer: 'Ext.Date.format(values.CloseDate, "n/j/Y")',
                        sortable: true,
                        addDataIndexToDiv: true// test cell tapping for Close Date
                    },
                    {
                        header: 'Open<br>Price',
                        dataIndex: 'Open',
                        width: '4.375em',
                        style: 'text-align: right;font-weight: normal; padding-right: .4em;',
                        styleSorted: 'text-align: right;font-weight: bold; padding-right: .4em; background-color: #dedede',
                        headerStyle: 'text-align: center;',
                        headerStyleSorted: 'text-align: center; background-color: #dedede',
                        renderer: 'this.formatNumbers(values.Open, 0)',
                        sortable: true
                    },
                    {
                        header: 'High<br>Price',
                        dataIndex: 'High',
                        width: '4.375em',
                        style: 'text-align: right;font-weight: normal; padding-right: .4em;',
                        styleSorted: 'text-align: right;font-weight: bold; padding-right: .4em; background-color: #dedede',
                        headerStyle: 'text-align: center;',
                        headerStyleSorted: 'text-align: center; background-color: #dedede',
                        renderer: 'this.formatNumbers(values.High, 0)',
                        sortable: true
                    },
                    {
                        header: 'Low<br>Price',
                        dataIndex: 'Low',
                        width: '4.375em',
                        style: 'text-align: right;font-weight: normal; padding-right: .4em;',
                        styleSorted: 'text-align: right;font-weight: bold; padding-right: .4em; background-color: #dedede',
                        headerStyle: 'text-align: center;',
                        headerStyleSorted: 'text-align: center; background-color: #dedede',
                        renderer: 'this.formatNumbers(values.Low, 0)',
                        sortable: true
                    },
                    {
                        header: 'Close<br>Price',
                        dataIndex: 'Close',
                        width: '4.375em',
                        style: 'text-align: right;font-weight: bold; padding-right: .4em;',
                        styleSorted: 'text-align: right;font-weight: bold; padding-right: .4em; background-color: #dedede',
                        headerStyle: 'text-align: center;',
                        headerStyleSorted: 'text-align: center; background-color: #dedede',
                        renderer: 'this.formatNumbers(values.Close, 0)',
                        sortable: true,
                        addDataIndexToDiv: true// test cell tapping for Close Price 
                    },
                    {
                        header: '<br>Volume',
                        dataIndex: 'Volume',
                        width: '5.625em',
                        style: 'text-align: right;font-weight: normal; padding-right: .4em; border-right: 1px solid #9b9b9b',
                        styleSorted: 'text-align: right;font-weight: bold; padding-right: .4em; background-color: #dedede',
                        headerStyle: 'text-align: center;',
                        headerStyleSorted: 'text-align: center; background-color: #dedede',
                        renderer: 'this.formatNumbers(values.Volume, 0)',
                        sortable: true
                    },
                    {
                        header: '<br>Chg',
                        dataIndex: 'Chg',
                        width: '3.125em',
                        style: 'text-align: right;font-weight: normal; padding-right: .4em;',
                        styleSorted: 'text-align: right;font-weight: bold; padding-right: .4em; background-color: #dedede',
                        headerStyle: 'text-align: center;',
                        headerStyleSorted: 'text-align: center; background-color: #dedede',
                        renderer: 'this.renderer_formatWithColor(values.Chg, 0)',
                        sortable: true
                    },
                    {
                        header: '<br>Chg%',
                        dataIndex: 'ChgPct',
                        width: '4.375em',
                        style: 'text-align: right;font-weight: normal; padding-right: .4em;',
                        styleSorted: 'text-align: right;font-weight: bold; padding-right: .4em; background-color: #dedede',
                        headerStyle: 'text-align: center;',
                        headerStyleSorted: 'text-align: center; background-color: #dedede',
                        renderer: 'this.renderer_formatWithColor(values.ChgPct, 2, "", "%")',
                        sortable: true
                    }
                ],
                header: {
                    maxHeight: '3.2em',
                    minHeight: '3.2em'
                },
                listItemId: 'dow2012horizlist',
                renderers: {
                    renderer_formatWithColor: function (value, decPlaces, prefix, suffix, thouSeparator, decSeparator)
                {var clr = (value >= 0) ? 'green' : 'red';
                return '<span style="color:' + clr + ';">' + this.formatNumbers(value, decPlaces, prefix, suffix, thouSeparator, decSeparator) +
                    '</span>';}
                },
                helpHtml: './resources/html/DOW2012HorizExample.html',
                simpleList: true,
                columnSorting: true,
                cls: [
                    'x-touchtreegrid-list',
                    'x-touchtreegrid-list-dow2012Horiz'
                ],
                itemId: 'dow2012horiz',
                minWidth: '36em',
                width: '36em'
            }
        ]
    },

    initialize: function() {
        this.callParent();

        var horizgrid = this.down('#dow2012horizlist');
        var horizexample = this.down('#dow2012horiz');

        // get screen width in pixels
        var scrnwid = (window.innerWidth > 0) ? window.innerWidth : screen.width;
        // get maximum of screen width or dow2012horiz grid width converted to pixels
        var prewid = 36 * 16;  // 36em total width * 16 pixels per em
        var minScrnWid = Math.max(prewid, scrnwid);

        horizgrid.setWidth(minScrnWid);
        horizgrid.setMinWidth(minScrnWid);
        horizexample.setWidth(minScrnWid);
        horizexample.setMinWidth(minScrnWid);

        if (scrnwid > prewid) {
            this.setScrollable({disabled: true});  // disable scrolling if screen larger than grid
        }



    }

});